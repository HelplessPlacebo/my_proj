{"version":3,"sources":["components/ToDoLists/ToDoListTasks/Tasks.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/assetss/common/ValidatorsComponents/ElementsValidators.module.css","components/Header/Header.module.css","components/assetss/images/loader1.gif","components/Profile/UserInfo/Contact.module.css","components/assetss/images/viewed1.jpg","components/assetss/images/closeButton.png","components/assetss/images/trash.png","components/assetss/images/userLog.jpg","components/Profile/UserInfo/UserInfo.module.css","components/Dialogs/Message/Messages.module.css","components/Dialogs/Dialogs.module.css","components/ToDoLists/ToDoLists.module.css","serviceWorker.js","API/requests.js","data/ProfileReduser.js","data/DIalogsReduser.js","data/UsersReduser.js","data/AuthReducer.js","data/InitializatonReducer.js","data/ToDoListsReducer.js","data/redux-store.js","components/Header/LogOutButton.jsx","components/Header/AcountIcon.jsx","components/Header/MessagesIcon.jsx","components/Header/UsersIcon.jsx","components/Header/ToDoListsIcon.jsx","components/Header/Header.jsx","components/assetss/common/Loader/Loader.js","data/ProfileSelectors.js","data/AuthSelectors.js","data/InitialozationSelectors.js","components/Header/HeaderContainer.jsx","components/Dialogs/DialogInfo.jsx","components/Dialogs/Dialogs.jsx","components/hocs/AuthRedirect.js","data/DialogsSelectors.js","components/Dialogs/DialogsContainer.jsx","components/assetss/common/Paginator/Paginator.js","components/Users/User.jsx","components/MaterialUI/ModalWindow/UserSearchModal.jsx","components/Users/FindUser.jsx","components/Users/Users.jsx","data/Users-Selectors.js","components/Users/UsersContainer.jsx","components/Profile/UserInfo/ProfileStatusF.jsx","components/Profile/UserInfo/Contact.jsx","components/Profile/UserInfo/ProfileData.jsx","components/Profile/UserInfo/ProfileAvatar.jsx","components/assetss/common/ValidatorsComponents/ElementsValidators.js","components/utils/validators.js","components/Profile/UserInfo/ProfileDataEditorForm.jsx","components/Profile/UserInfo/SendMessageOnUserPage.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileCOntainer.jsx","components/Dialogs/Message/DeleteConfirmWindow.jsx","components/Dialogs/Message/DeleteMessage.jsx","components/Dialogs/Message/MessagesWithUser.jsx","components/Dialogs/Message/MessagesContainer.jsx","components/Login/Login.jsx","components/MaterialUI/ModalWindow/LoginModal.jsx","components/Login/LoginPage.jsx","components/ToDoLists/CreateNewToDoList/TextFieldToDoLists.jsx","components/ToDoLists/CreateNewToDoList/CreateNewToDoList.jsx","components/ToDoLists/DeleteToDoList.jsx","components/ToDoLists/EditButton.jsx","components/ToDoLists/ListMenu.jsx","components/ToDoLists/SaveButton.jsx","components/ToDoLists/GoBackButton.jsx","components/ToDoLists/TitleChangeField.jsx","components/ToDoLists/AddNewTask/AddNewTaskButton.jsx","components/ToDoLists/AddNewTask/AddNewTaskField.jsx","components/ToDoLists/AddNewTask/AddNewTask.jsx","components/ToDoLists/ToDoListTasks/ShowTasksButton.jsx","components/ToDoLists/ToDoListTasks/HideTasksButton.jsx","components/ToDoLists/ToDoListTasks/DeleteTaskButton.jsx","components/ToDoLists/ToDoListTasks/DoneIcone.jsx","components/ToDoLists/ToDoListTasks/EditTaskButton.jsx","components/ToDoLists/ToDoListTasks/TaskShowDetailsIcon.jsx","components/ToDoLists/ToDoListTasks/TaskHideDetails.jsx","components/ToDoLists/ToDoListTasks/TaskDetails.jsx","components/ToDoLists/ToDoListTasks/NotDoneIcon.jsx","components/ToDoLists/ToDoListTasks/TaskEditForm.jsx","components/ToDoLists/ToDoListTasks/Task.jsx","components/ToDoLists/ToDoListTasks/Tasks.jsx","components/ToDoLists/ToDoList.jsx","components/ToDoLists/ToDoLists.jsx","data/ToDoListsSelectors.js","components/ToDoLists/ToDoListsContainer.jsx","App.js","index.js","components/assetss/images/userPhoto.jpg","components/Login/login.module.css","components/Users/Users.module.css","components/Users/FindUser.module.css","components/ToDoLists/CreateNewToDoList/CreateNewToDoList.module.css","components/Profile/UserInfo/ProfileData.module.css","components/assetss/common/Paginator/Paginator.module.css"],"names":["module","exports","Main","MainWrapper","TaskBodyWrapper","deadline","description","Ramka","DoneRamka","ToTrashIcon","iconStatus","Title","DetailsButton","detailsWrapper","startDate","descriptionText","TaskEditButton","TaskFormWrapper","TaskEditFromButtons","GoBackButton","MainFormWrapper","CompletedInput","FormDescription","priority","TaskFormSaveButton","pp","marginPost","button","item","img","like","formControl","error","textarea","input","TextAreaMessage","textareaAboutMe","ContactFormInput","TextAreaDialogsMessage","header","IconsWrapper","log","loader","MessagesIconStyle","accountIconUserName","loginPosition","loginButton","active","startPosition","LogOutStyle","__webpack_require__","p","contact","userdescrition","UserPhoto","ProfileName","UserName","FormError","goback","MyContacts","ContactsForm","MyName","buttonSaveChanges","buttonGoBack","EditorFormBG","AddPhotoButtonPosition","MessageFormStyle","dateStyle","messageText","UserNameInMessages","viewed","fontStyles","confirmDeletingWindow","confirmDeletingWindowButtons","buttontsDelta","confirmDeletingWindowHeader","confirmDeletingWindowText","imgClose","deleteMessageStyle","wrapper","DialogUserPhoto","padding","dialogs","dialogsItems","messages","DialogArea","activeLink","ConfirmText","ToTrash","ToDoListsPosition","ToDolistsWrapper","ToDoListTitle","ToDolistsChanchingWrapper","ToDoListChangingInput","EditButtonPostition","AddNewTaskWrapper","AddTaskButton","ShowTasksButton","HideTasksButton","TasksContent","tasksposititon","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","API","getUsers","_getUsers","Object","asyncToGenerator","regenerator_default","a","mark","_callee","currentPage","pageSize","response","_args","arguments","wrap","_context","prev","next","length","undefined","get","concat","sent","abrupt","data","stop","apply","this","AuthMe","_AuthMe","_callee2","_context2","getProfile","_getProfile","_callee3","ProfileID","_args3","_context3","DelSub","_DelSub","_callee4","userId","_context4","delete","_x","AddSub","_AddSub","_callee5","_context5","post","_x2","getProfileStatus","_getProfileStatus","_callee6","_args6","_context6","setProfileStatus","_setProfileStatus","_callee7","status","_context7","put","_x3","Login","_Login","_callee8","email","password","rememberMe","captcha","_context8","_x4","_x5","_x6","_x7","LogOut","_LogOut","_callee9","_context9","LoadPhotoOnServer","_LoadPhotoOnServer","_callee10","photo","formdata","_context10","FormData","append","Content-Type","_x8","PutProfileDataOnServer","_PutProfileDataOnServer","_callee11","profile","_context11","_x9","GetCaptchaFromServer","_GetCaptchaFromServer","_callee12","_context12","GetAllDialogs","_GetAllDialogs","_callee13","_context13","GetNewMessagesFromServer","_GetNewMessagesFromServer","_callee14","_context14","_x10","SendNewMessage","_SendNewMessage","_callee15","NewMessage","_context15","body","_x11","_x12","GetNewMessagesCount","_GetNewMessagesCount","_callee16","_context16","DeleteMessage","_DeleteMessage","_callee17","MessageID","_context17","_x13","FindUser","_FindUser","_callee18","_context18","_x14","GetToDoLists","_GetToDoLists","_callee19","_context19","CreateNewToDoList","_CreateNewToDoList","_callee20","title","_context20","_x15","DeleteToDoList","_DeleteToDoList","_callee21","todolistId","_context21","_x16","ChangeToDoListTitle","_ChangeToDoListTitle","_callee22","_context22","_x17","_x18","GetToDoListTasks","_GetToDoListTasks","_callee23","count","page","_args23","_context23","_x19","CreateNewTakForToDoList","_CreateNewTakForToDoList","_callee24","Tasktitle","DataResponse","_context24","_x20","_x21","ChangeTaskInformation","_ChangeTaskInformation","_callee25","taskid","_context25","_x22","_x23","_x24","DeleteTaskFromToDoList","_DeleteTaskFromToDoList","_callee26","_context26","_x25","_x26","DefaultState","Posts","TextNewPost","IsMyPage","OwnName","SetStatusOfUser","type","SetPhotoOfUser","GetProfileThunk","_ref","dispatch","getState","MyID","Auth","MyOwnName","fullName","ProfileReducer","state","action","NewPost","id","Post","newtext","likesCount","objectSpread","toConsumableArray","photos","bool","users","avatars","NewMessageText","AllDialogs","DialogsMessages","InterlocutorAvatar","UserAvatar","NewMessagesCount","SetNewMessages","NewMessagesData","setUserAvatarForDialogs","GetNewMessagesThunk","UserId","_ref2","SendNewMessageThunk","_ref3","GetNewMessagesCountThunk","_ref6","DialogsReducer","NewAllDialogs","newInterlocutorAvatar","Portion_Size_Changer","Users","totalUsersCount","IsFetching","InProcess","PortionSize","FoundedUser","OnFollow","userID","onUnFollow","ToggleIsFetching","ToggleInProcess","InProgress","UserID","UsersReducer","map","us","followed","filter","PortionSizeChangingValue","NewFoundedUser","login","IsLogined","CaptchaUrl","SetAuthUser","AuthMeThunk","_data$data","resultCode","GetCaptchaThunk","_ref4","captchaURL","url","CaptchaURLFromServer","AuthReducer","inition","InitializateReducer","ToDoLists","ToDoListTasks","ToDoListTasksPage","ToDoListTasksCount","GetToDoListsThunk","ResponseData","NewToDoLists","GetToDoListTasksThunk","ToDoListID","_ref5","Tasks","ToDoListsReducer","NewToDoListTasksPage","NewToDoListTasksCount","reducers","combineReducers","ProfileData","MessagesData","UsersData","form","formReducer","Init","ToDoListsData","store","createStore","applyMiddleware","thunkMiddleWare","LogOutButton","props","react_default","createElement","className","HS","onClick","LogOutThunk","handleMenuClose","AccountIconComponent","_useState","useState","_useState2","slicedToArray","anchorEl","setAnchorEl","isMenuOpen","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","hs","react_router_dom","to","MenuItem","Header_LogOutButton","IconButton","edge","aria-label","aria-controls","aria-haspopup","event","currentTarget","color","AccountCircle_default","MessagesIcon","Badge_default","badgeContent","toString","Mail_default","People_default","ToDoListsIcon","ListAlt_default","Header","NMC","SetNMC","useEffect","hc","activeClassName","Header_ToDoListsIcon","UsersIcon","MessagesIconPosition","Header_MessagesIcon","AcountIcon","UserProfile","Preloader","src","LoadingSvg","GetProfileSelector","GetStatusSelector","GetIsMyPageSelector","GetPostsSelector","GetOwnNameSelector","GetUserIDSelector","GetIsLoginedSelector","GetLoginSelector","GetIsFetchingSelector","GetinitionSelector","GetNewMessagesCountSelector","HeaderContainer","prevProps","prevState","snapshot","Fragment","Loader","components_Header_Header","React","Component","connect","OwnID","DialogInfo","date","MessageSendTime","split","time","d","pc","DialogUserName","DialogUserAvatar","Dialogs","el","Dialogs_DialogInfo","key","userName","small","large","newMessagesCount","lastDialogActivityDate","MapStateToPropsForRedirect","AuthRedirect","RedirectComp","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","react_router","GetAllDialogsSelector","GetMessagesDataSelector","DialogsContainer","GetAllDialogsThunk","components_Dialogs_Dialogs","compose","withRouter","Paginator","pagesCount","Math","ceil","pages","i","push","PortionNumber","SetPortionNumber","LeftBorderOfPortion","RightBorderOfPortion","PortionCount","PS","setNumbers","NumbersFont","numbers","ev","OnChangedPage","User","um","user","name","disabled","some","OnUnFollow","unfollow","follow","FindUserModal","setOpen","handleClose","Button","variant","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","fullWidth","DialogActions","SubmitModal","SetFoundedUser","_useState3","_useState4","FoundingMode","SetFoundingMode","OnSubmitData","FindUserThunk","document","getElementById","FUStyles","foundArea","SearchingResult","items","FoundedUsers","FoundedUsersWrapper","Users_User","GoBack","FindUserButton","UserSearchModal","PurifyUsers","ChangePortionSize","Users_FindUser","UsersWrapper","PaginatorPosition","common_Paginator_Paginator","GetUsers","GetPageSize","GetTotalUsersCount","GetCurrentPage","GetIsFeching","GetInProgress","GetPortionSize","GetFoundedUserSelector","UsersContainer","pageNumber","_this","SetCurrentPage","getUsersThunk","followThunk","unfollowThunk","totalCount","stopSubmit","_error","ProfileStatusF","IsStatusChanging","SetIsStatusChanging","Status","SetStatus","onChange","e","onBlur","SetProfileStatus","onDoubleClick","Contact","ContactValue","cs","ContactName","ProfileContacts","keys","contacts","ProfileContactsValues","pds","aboutME","aboutMe","lookingForAJob","lookingForAJobDescription","buttonEditInformation","ContactsEditingOn","values","UserInfo_Contact","SetIsAnyContact","ProfileAvatar","SelectPhoto","target","files","SetProfilePhoto","accept","htmlFor","AddAPhoto_default","TextArea","meta","objectWithoutProperties","touched","EVS","assign","TextAreaAboutMe","Input","InputName","_ref7","CreateField","placeholder","validators","component","text","Field","validate","required","MaxLengthCreator","MaxLengthValue","max300","max150","max50","ProfileDataEditorForm","onSubmit","handleSubmit","ContactsEditingOFF","maxLength300","ReduxSendMessageOnUserPageForm","reduxForm","lm","AuthError","MessageSendingModOFF","SendMessageOnUserPage","ChosedSendMessage","SetChosedSendMessage","Formdata","MessageFromUserPage","ProfileDataEditorFormRedux","UserInfo","ContactsIsEditing","SetContactsIsEditing","UserInfo_ProfileAvatar","UserInfo_ProfileStatusF","UserInfo_SendMessageOnUserPage","initialValues","formData","SaveProfileData","then","UserInfo_ProfileData","message","likecount","maxValue250","ReduxMyPostForm","MyPosts","memo","posts","MyPosts_Post_Post","formDatas","addpost","postArea","MyPostsConteiner","MyPosts_MyPosts","PureComponent","Profile","Profile_UserInfo_UserInfo","MyPosts_MyPostsConteiner","ProfileContainer","params","SetIsMyPage","history","GetProfileStatusThunk","ProfileDataToPaint","components_Profile_Profile","SetProfileStatusThunk","SetProfilePhotoThunk","UpdateProfileInfoThunk","profileID","Promise","reject","DeleteConfirmWindow","closeWindow","SetToConfirmDeleting","ms","ToConfirmDeleting","CloseButton","deleteMessage","MessageToRestore","SetMessageToRestore","Message_DeleteConfirmWindow","DeleteMessageThunk","DialoguserID","maxValue300","ReduxMessageWithUserForm","MessagesWithUser","SetMessagesData","mwuStyles","addedAt","senderName","senderId","Message_DeleteMessage","Viewed","MessageTextArea","MessagesContainer","GetInterlocutorAvatarThunk","GetProfileAvatarThunk","Message_MessagesWithUser","maxLength50","ReduxLoginForm","LoginUserPhoto","imgUser","LoginThunk","withStyles","theme","root","spacing","closeButton","position","right","top","palette","grey","children","classes","other","disableTypography","Typography","Close_default","LoginModalWindow","MuiDialogContent","CustomizedDialogs","_React$useState","_React$useState2","aria-labelledby","LoginModal_DialogTitle","dividers","components_Login_Login","LoginPage","LoginPageAlarm","AuthButton","useStyles","makeStyles","InputWithIcon","Grid","container","alignItems","OnTextFieldCreateNewToDoListChanging","CreateNewToDoListMode","SetCreateNewToDoListMode","CurrentValueOfCreateNewToDoListInput","SetCurrentValueOfCreateNewToDoListInput","TDlistS","CreateAndGoBackButtons","AddNewListButton","GoBacktButton","AddNewListWrapper","AddNewToDoListsThunk","Addbutton","DeleteToDoListButton","ShowTasksMode","Del","ListID","size","startIcon","Delete_default","EditButton","Fab","ButtonSize","Edit_default","HandleOnEdit","ToDoListMenuIcon","TDLS","ToDoLists_EditButton","EditTitleModeON","ToDoLists_DeleteToDoList","MoreVert_default","SaveButton","CurrentToDoListTitle","ChangeToDoListTitleThunk","EditTitleModeOFF","Save_default","HandleOnClick","ArrowBack_default","display","flexWrap","textField","marginLeft","marginRight","width","TitleChangingField","noValidate","autoComplete","OnToDoListTitleChanging","helperText","AddNewTaskButton","AddNewTaskFieldCurrentValue","AddNewTaskThunk","AddTaskField","OnAddNewTaskFieldChange","AddNewTask","SetAddNewTaskFieldCurrentValue","AddNewTaskField","AddNewTask_AddNewTaskButton","ButtonIsDesabled","KeyboardArrowDown_default","KeyboardArrowUp_default","DeleteButton","ShowButtonBlocked","DeleteTaskThunk","TaskID","DeleteOutline_default","TaskDoneIcon","Done_default","EditTaskButton","TaskShowDetailsIcon","TaskHideDetailsIcon","TaskDetails","ShowDetails","SetShowDetails","DateTransform","join","reverse","AddedDate","DeadLineDate","ts","TaskHideDetails","ShowButtonBlockedOFF","ToDoListTasks_TaskShowDetailsIcon","ShowButtonBlockedON","NotDoneIcon","Clear_default","TaskEditForm","ToDoLists_GoBackButton","TaskEditModeOFF","TaskExecutedStyleForWindow","TaskEditFormRedux","Task","_classNames","TaskEditMode","SetTaskEditMode","CurrentTask","completed","classNames","defineProperty","console","UpdateTaskInformationThunk","ToDoListTasks_EditTaskButton","DoneIcone","ToDoListTasks_NotDoneIcon","TaskTitle","DeleteTaskButton","ToDoListTasks_TaskDetails","TaskDeadline","TaskDescription","TasksData","SetTasksData","SetShowButtonBlocked","task","ToDoListTasks_Task","todoListId","TaskAddedDate","addedDate","ToDoList","EditTitleMode","SetEditTitleMode","SetShowTasksMode","_useState5","_useState6","SetToDoListTitle","ToDoLists_SaveButton","TitleChangeField","ListMenu","DeleteToDoListThunk","ToDoLists_AddNewTask_AddNewTask","ToDoListTasks_Tasks","ToDoListTasks_HideTasksButton","ButtonIsDesabledOFF","ToDoListTasks_ShowTasksButton","ButtonIsDesabledON","SetButtonIsDesabled","ToDoLists_CreateNewToDoList_CreateNewToDoList","ToDoLists_ToDoList","GetToDoListTasksPage","GetToDoListTasksCount","GetToDoListIsFetching","ToDoListsContainer","components_ToDoLists_ToDoLists","SetToDoListTasksPage","SetToDoListTasksCount","Newtitle","TaskId","_ref8","App","InitializationAPPthunk","Header_HeaderContainer","exact","path","render","Dialogs_DialogsContainer","Message_MessagesContainer","ProfileCOntainer","Users_UsersContainer","Login_LoginPage","ToDoLists_ToDoListsContainer","promise","MyId","all","ReactDOM","basename","process","react_redux_es","src_App_0","navigator","serviceWorker","ready","registration","unregister","bg","bg10","logModalWindow","Names","Country","City"],"mappings":"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","file":"static/js/main.db688355.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Tasks_Main__3BWH0\",\"MainWrapper\":\"Tasks_MainWrapper__2pj1b\",\"TaskBodyWrapper\":\"Tasks_TaskBodyWrapper__3ij9J\",\"deadline\":\"Tasks_deadline__1U-ZC\",\"description\":\"Tasks_description__KV7_2\",\"Ramka\":\"Tasks_Ramka__37PWH\",\"DoneRamka\":\"Tasks_DoneRamka__2sVcb\",\"ToTrashIcon\":\"Tasks_ToTrashIcon__1Bzva\",\"iconStatus\":\"Tasks_iconStatus__1GMe_\",\"Title\":\"Tasks_Title__2ZCqX\",\"DetailsButton\":\"Tasks_DetailsButton__2e43T\",\"detailsWrapper\":\"Tasks_detailsWrapper__1fEsw\",\"startDate\":\"Tasks_startDate__3m-5Q\",\"descriptionText\":\"Tasks_descriptionText__2aPsR\",\"TaskEditButton\":\"Tasks_TaskEditButton__1ow_D\",\"TaskFormWrapper\":\"Tasks_TaskFormWrapper__16blE\",\"TaskEditFromButtons\":\"Tasks_TaskEditFromButtons__4TxdW\",\"GoBackButton\":\"Tasks_GoBackButton__egsQ4\",\"MainFormWrapper\":\"Tasks_MainFormWrapper__10W0X\",\"CompletedInput\":\"Tasks_CompletedInput__3ka7Y\",\"FormDescription\":\"Tasks_FormDescription__3jOQy\",\"priority\":\"Tasks_priority__1YFGo\",\"TaskFormSaveButton\":\"Tasks_TaskFormSaveButton__3p1s_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pp\":\"MyPosts_pp__oOvBm\",\"marginPost\":\"MyPosts_marginPost__1eXDQ\",\"button\":\"MyPosts_button__BRsVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__GvU_X\",\"img\":\"Post_img__1drkR\",\"like\":\"Post_like__VlEH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ElementsValidators_formControl__2NyA5\",\"error\":\"ElementsValidators_error__3FUa5\",\"textarea\":\"ElementsValidators_textarea__3cIBd\",\"button\":\"ElementsValidators_button__tZ8xv\",\"input\":\"ElementsValidators_input__23YpE\",\"TextAreaMessage\":\"ElementsValidators_TextAreaMessage__16qP9\",\"textareaAboutMe\":\"ElementsValidators_textareaAboutMe__1i4aL\",\"ContactFormInput\":\"ElementsValidators_ContactFormInput__2F0Oc\",\"TextAreaDialogsMessage\":\"ElementsValidators_TextAreaDialogsMessage__3UVNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3L50G\",\"IconsWrapper\":\"Header_IconsWrapper__O29iG\",\"item\":\"Header_item__2BL1D\",\"log\":\"Header_log__2oet5\",\"loader\":\"Header_loader__1oqn8\",\"MessagesIconStyle\":\"Header_MessagesIconStyle__4F9-k\",\"accountIconUserName\":\"Header_accountIconUserName__1yn7c\",\"loginPosition\":\"Header_loginPosition__1Mv6C\",\"loginButton\":\"Header_loginButton__1rOO6\",\"active\":\"Header_active__wKwwX\",\"startPosition\":\"Header_startPosition__18IcE\",\"LogOutStyle\":\"Header_LogOutStyle__2lzry\"};","module.exports = __webpack_public_path__ + \"static/media/loader1.54c96e01.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__8hXUq\"};","module.exports = __webpack_public_path__ + \"static/media/viewed1.1334aba6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/closeButton.8c53b830.png\";","module.exports = __webpack_public_path__ + \"static/media/trash.99ef094b.png\";","module.exports = __webpack_public_path__ + \"static/media/userLog.ae20f8de.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userdescrition\":\"UserInfo_userdescrition__3mhuU\",\"UserPhoto\":\"UserInfo_UserPhoto__28MeR\",\"ProfileName\":\"UserInfo_ProfileName__ioqSD\",\"UserName\":\"UserInfo_UserName__3jEfi\",\"FormError\":\"UserInfo_FormError__EPiL-\",\"goback\":\"UserInfo_goback__3tajc\",\"MyContacts\":\"UserInfo_MyContacts__3Cxig\",\"input\":\"UserInfo_input__1T4oP\",\"ContactsForm\":\"UserInfo_ContactsForm__1gWsD\",\"MyName\":\"UserInfo_MyName__ybeTv\",\"buttonSaveChanges\":\"UserInfo_buttonSaveChanges__28dF5\",\"buttonGoBack\":\"UserInfo_buttonGoBack__1urJa\",\"EditorFormBG\":\"UserInfo_EditorFormBG__1shzc\",\"AddPhotoButtonPosition\":\"UserInfo_AddPhotoButtonPosition__1puDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessageFormStyle\":\"Messages_MessageFormStyle__3_75P\",\"dateStyle\":\"Messages_dateStyle__1z3DB\",\"img\":\"Messages_img__3OsI6\",\"messageText\":\"Messages_messageText__1fb-7\",\"UserNameInMessages\":\"Messages_UserNameInMessages__1eMkc\",\"viewed\":\"Messages_viewed__2S_Ep\",\"fontStyles\":\"Messages_fontStyles__1kczt\",\"confirmDeletingWindow\":\"Messages_confirmDeletingWindow__1l7zx\",\"confirmDeletingWindowButtons\":\"Messages_confirmDeletingWindowButtons___hBhx\",\"buttontsDelta\":\"Messages_buttontsDelta__FwB_z\",\"confirmDeletingWindowHeader\":\"Messages_confirmDeletingWindowHeader__3O44g\",\"confirmDeletingWindowText\":\"Messages_confirmDeletingWindowText__1CX63\",\"imgClose\":\"Messages_imgClose__2UMNq\",\"deleteMessageStyle\":\"Messages_deleteMessageStyle__1uqFk\",\"wrapper\":\"Messages_wrapper__miyNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Dialogs_Main__fgm98\",\"DialogUserPhoto\":\"Dialogs_DialogUserPhoto__2S4Tu\",\"padding\":\"Dialogs_padding__3E-h0\",\"dialogs\":\"Dialogs_dialogs__BjYAn\",\"dialogsItems\":\"Dialogs_dialogsItems__1VDH2\",\"active\":\"Dialogs_active__2EN3N\",\"messages\":\"Dialogs_messages__1bTDr\",\"img\":\"Dialogs_img__1DEd5\",\"header\":\"Dialogs_header__xOCfp\",\"button\":\"Dialogs_button__30gtx\",\"DialogArea\":\"Dialogs_DialogArea__2YCQ-\",\"item\":\"Dialogs_item__be1yr\",\"activeLink\":\"Dialogs_activeLink__309Uh\",\"deleteMessageStyle\":\"Dialogs_deleteMessageStyle__3GrY8\",\"ConfirmText\":\"Dialogs_ConfirmText__3Xy4I\",\"ToTrash\":\"Dialogs_ToTrash__3Py0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToDoListsPosition\":\"ToDoLists_ToDoListsPosition__3MkVI\",\"ToDolistsWrapper\":\"ToDoLists_ToDolistsWrapper__220tE\",\"ToDoListTitle\":\"ToDoLists_ToDoListTitle__LyiG1\",\"ToDolistsChanchingWrapper\":\"ToDoLists_ToDolistsChanchingWrapper__2Edj6\",\"ToDoListChangingInput\":\"ToDoLists_ToDoListChangingInput__aFOXL\",\"EditButtonPostition\":\"ToDoLists_EditButtonPostition__2h4K0\",\"AddNewTaskWrapper\":\"ToDoLists_AddNewTaskWrapper__3B8fo\",\"AddTaskButton\":\"ToDoLists_AddTaskButton__2QYQ2\",\"ShowTasksButton\":\"ToDoLists_ShowTasksButton__23yFD\",\"HideTasksButton\":\"ToDoLists_HideTasksButton__1OJJX\",\"TasksContent\":\"ToDoLists_TasksContent__NmQUx\",\"tasksposititon\":\"ToDoLists_tasksposititon__2Frvl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"96428d9a-0d9d-4cb1-8a30-3ebf6693ac4b\"\r\n    }\r\n})\r\n\r\nexport const API = {\r\n\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        return response.data\r\n    },\r\n\r\n    async AuthMe() {\r\n        const response = await instance.get(`auth/me`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfile(ProfileID = 2) {\r\n        const response = await instance.get(`profile/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async DelSub(userId) {\r\n        const response = await instance.delete(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async AddSub(userId) {\r\n        const response = await instance.post(`follow/${userId}`)\r\n        return response.data\r\n    },\r\n\r\n    async getProfileStatus(ProfileID = 2) {\r\n        const response = await instance.get(`profile/status/` + ProfileID)\r\n        return response.data\r\n    },\r\n\r\n    async setProfileStatus(status) {\r\n        const response = await instance.put(`profile/status/`, {status: status})\r\n        return response.data\r\n\r\n    },\r\n\r\n    async Login(email, password, rememberMe, captcha) {\r\n        const response = await instance.post(`auth/login/`, {\r\n            email: email,\r\n            password: password,\r\n            rememberMe: rememberMe,\r\n            captcha: captcha\r\n        })\r\n        return response.data\r\n    },\r\n\r\n    async LogOut() {\r\n        const response = await instance.delete(`auth/login`)\r\n        return response.data\r\n\r\n    },\r\n\r\n    async LoadPhotoOnServer(photo) {\r\n        const formdata = new FormData()\r\n        formdata.append(\"image\", photo)\r\n        const response = await instance.put('profile/photo', formdata, {\r\n            'Content-Type': 'multipart/form-data'\r\n        })\r\n        return response.data\r\n    },\r\n    async PutProfileDataOnServer(profile) {\r\n        const response = await instance.put('profile', profile)\r\n        return response.data\r\n    },\r\n    async GetCaptchaFromServer() {\r\n        const response = await instance.get('security/get-captcha-url')\r\n        return response.data\r\n    },\r\n    async GetAllDialogs() {\r\n        const response = await instance.get('dialogs')\r\n        return response.data\r\n    },\r\n    async GetNewMessagesFromServer(userId) {\r\n        const response = await instance.get(`dialogs/${userId}/messages`)\r\n        return response.data\r\n    },\r\n    async SendNewMessage(userId, NewMessage) {\r\n        const response = await instance.post(`dialogs/${userId}/messages`, {\r\n            body: NewMessage\r\n        })\r\n        return response.data\r\n    },\r\n    async GetNewMessagesCount() {\r\n        const response = await instance.get('dialogs/messages/new/count')\r\n        return response\r\n    },\r\n    async DeleteMessage(MessageID) {\r\n        const response = await instance.delete(`dialogs//messages/${MessageID}`)\r\n        return response\r\n    },\r\n    async FindUser(UserName) {\r\n        const response = await instance.get(`users?term=${UserName}`)\r\n        return response\r\n    },\r\n    async GetToDoLists() {\r\n        const response = await instance.get('todo-lists')\r\n        return response\r\n    },\r\n    async CreateNewToDoList(title) {\r\n        const response = await instance.post('todo-lists', {title: title})\r\n        return response\r\n    },\r\n    async DeleteToDoList(todolistId) {\r\n        await instance.delete(`todo-lists/${todolistId}`)\r\n    },\r\n    async ChangeToDoListTitle(todolistId, title) {\r\n        await instance.put(`todo-lists/${todolistId}`, {\r\n            title: title\r\n        })\r\n    },\r\n    async GetToDoListTasks(todolistId, count = 10, page = 1) {\r\n        const response = await instance.get(`todo-lists/${todolistId}/tasks?count=${count}&page=${page}`)\r\n        return response\r\n    },\r\n\r\n    async CreateNewTakForToDoList(todolistId, Tasktitle) {\r\n        const DataResponse = await instance.post(`todo-lists/${todolistId}/tasks`, {\r\n            title: Tasktitle\r\n        })\r\n        return DataResponse\r\n    },\r\n\r\n    async ChangeTaskInformation(todolistId, taskid, status) {\r\n        const DataResponse = await instance.put(`todo-lists/${todolistId}/tasks/${taskid}`, status)\r\n        return DataResponse\r\n    },\r\n\r\n    async DeleteTaskFromToDoList(todolistId, taskid) {\r\n        const DataResponse = await instance.delete(`todo-lists/${todolistId}/tasks/${taskid}`)\r\n        return DataResponse\r\n    },\r\n}\r\n","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst add_post = 'Profile/ADD_POST'\r\nconst Set_Profile_Of_User = 'Profile/Set_Profile_Of_User'\r\nconst Set_Status_Of_User = '/Profile/Set_Status_Of_User'\r\nconst Set_Photo_Of_User = '/Profile/Set_Photo_Of_User'\r\nconst Set_Is_My_Page = '/Profile/Set_Is_My_Page'\r\nconst Set_Own_Name= '/Profile/Set_Own_Name'\r\n\r\n\r\nlet DefaultState = {\r\n    Posts: [],\r\n    TextNewPost: '',\r\n    profile: null,\r\n    status: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n    IsMyPage: false,\r\n    OwnName : \"\"\r\n}\r\n\r\nconst ProfileReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case add_post: {\r\n            let NewPost = {\r\n                id: 6,\r\n                Post: action.newtext,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n\r\n                Posts: [...state.Posts, NewPost],\r\n            }\r\n        }\r\n        case Set_Profile_Of_User: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case Set_Status_Of_User: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case Set_Photo_Of_User: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photo}\r\n            }\r\n        }\r\n        case Set_Is_My_Page: {\r\n            return {...state, IsMyPage: action.bool}\r\n        }\r\n        case Set_Own_Name: {\r\n            return {...state, OwnName: action.MyOwnName}\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addpost = (text) => {\r\n    return {type: add_post, newtext: text}\r\n}\r\n\r\nexport const setProfileOfUser = (profile) => {\r\n    return {type: Set_Profile_Of_User, profile}\r\n}\r\n\r\nexport const SetStatusOfUser = (status) => {\r\n    return {type: Set_Status_Of_User, status}\r\n}\r\n\r\nexport const SetPhotoOfUser = (photo) => {\r\n    return {type: Set_Photo_Of_User, photo}\r\n}\r\n\r\nexport const SetIsMyPage = (bool) => {\r\n    return {type: Set_Is_My_Page, bool}\r\n}\r\nexport const SetOwnName = (MyOwnName) => {\r\n    return {type: Set_Own_Name, MyOwnName}\r\n}\r\n\r\n\r\n\r\n\r\nexport const GetProfileThunk = (ProfileID) => async (dispatch,getState) => {\r\n    const MyID = getState().Auth.userId\r\n    const data = await API.getProfile(ProfileID)\r\n    dispatch(setProfileOfUser(data))\r\n    if (data.userId === MyID) {\r\n        dispatch(SetOwnName(data.fullName))\r\n    }\r\n}\r\n\r\n\r\nexport const GetProfileStatusThunk = (userID) => async (dispatch) => {\r\n    const data = await API.getProfileStatus(userID)\r\n    dispatch(SetStatusOfUser(data))\r\n}\r\n\r\nexport const SetProfileStatusThunk = (status) => async (dispatch) => {\r\n    const data = await API.setProfileStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetStatusOfUser(status))\r\n    }\r\n}\r\n\r\nexport const SetProfilePhotoThunk = (photo) => async (dispatch) => {\r\n    const data = await API.LoadPhotoOnServer(photo)\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetPhotoOfUser(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const UpdateProfileInfoThunk = (profile) => async (dispatch, getState) => {\r\n    const profileID = getState().Auth.userId\r\n    const data = await API.PutProfileDataOnServer(profile)\r\n    if (data.resultCode === 0) {\r\n        dispatch(GetProfileThunk(profileID))\r\n    } else {\r\n        dispatch(stopSubmit(\"ProfileDataEditorForm\",{_error : data.messages[0]}))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileReducer","import {API} from \"../API/requests\";\r\n\r\nconst Set_All_Dialogs = 'Dialogs/Set_All_Dialogs'\r\nconst Set_New_Messages = 'Dialogs/Set_New_Messages'\r\nconst Set_InterlocutorAvatar = 'Dialogs/Set_InterlocutorAvatar'\r\nconst Set_UserAvatarForDialogs = 'Dialogs/Set_UserAvatarForDialogs'\r\nconst Set_NewMessagesCount = 'Dialogs/Set_NewMessagesCount'\r\n\r\nlet DefaultState = {\r\n    users: [],\r\n    messages: [],\r\n    avatars: [{}],\r\n    NewMessageText: '',\r\n    AllDialogs: [],\r\n    DialogsMessages: null,\r\n    InterlocutorAvatar : \"\",\r\n    UserAvatar : \"\",\r\n    NewMessagesCount : 0\r\n}\r\nconst DialogsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n\r\n        case Set_All_Dialogs : {\r\n            return {...state, AllDialogs: action.NewAllDialogs}\r\n        }\r\n        case  Set_New_Messages : {\r\n            return {...state, DialogsMessages: action.NewMessagesData}\r\n        }\r\n        case Set_InterlocutorAvatar :{\r\n            return {\r\n                ...state, InterlocutorAvatar : action.newInterlocutorAvatar\r\n            }\r\n        }\r\n        case Set_UserAvatarForDialogs :{\r\n            return {\r\n                ...state, UserAvatar : action.UserAvatar\r\n            }\r\n        }\r\n        case Set_NewMessagesCount :{\r\n            return {\r\n                ...state, NewMessagesCount : action.NewMessagesCount\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const SetAllDialogs = (NewAllDialogs) => {\r\n    return {type: Set_All_Dialogs, NewAllDialogs}\r\n}\r\nexport const SetNewMessages = (NewMessagesData) => {\r\n    return {type: Set_New_Messages, NewMessagesData}\r\n}\r\nexport const setInterlocutorAvatar = (newInterlocutorAvatar) => {\r\n    return {type: Set_InterlocutorAvatar , newInterlocutorAvatar}\r\n}\r\nexport const SetNewMessagesCount = (NewMessagesCount) => {\r\n    return {type: Set_NewMessagesCount , NewMessagesCount}\r\n}\r\nexport const setUserAvatarForDialogs = (UserAvatar) => {\r\n    return {type: Set_UserAvatarForDialogs , UserAvatar}\r\n}\r\n\r\n\r\nexport const GetAllDialogsThunk = () => async (dispatch) => {\r\n    const data = await API.GetAllDialogs()\r\n    dispatch(SetAllDialogs(data))\r\n}\r\nexport const GetNewMessagesThunk = (UserId) => async (dispatch) => {\r\n    const data = await API.GetNewMessagesFromServer(UserId)\r\n    if (!data.error) {\r\n        dispatch(SetNewMessages(data))\r\n    }\r\n\r\n}\r\nexport const SendNewMessageThunk = (UserId, NewMessage) => async (dispatch) => {\r\n    const data = await API.SendNewMessage(UserId, NewMessage)\r\n    if (!data.error) {\r\n        dispatch(GetNewMessagesThunk(UserId))\r\n    }\r\n}\r\nexport const GetInterlocutorAvatarThunk = (UserId) => async (dispatch) => {\r\n    const data = await API.getProfile(UserId)\r\n        dispatch(setInterlocutorAvatar(data.photos.small))\r\n}\r\nexport const GetProfileAvatarThunk = (UserID) => async (dispatch) => {\r\n    const data = await API.getProfile(UserID)\r\n        dispatch(setUserAvatarForDialogs(data.photos.small))\r\n}\r\nexport const GetNewMessagesCountThunk = () => async (dispatch) => {\r\n    const data = await API.GetNewMessagesCount()\r\n    dispatch(SetNewMessagesCount(data.data))\r\n}\r\nexport const DeleteMessageThunk = (MessageID,UserID) => async (dispatch) => {\r\n   await API.DeleteMessage(MessageID)\r\n    dispatch(GetNewMessagesThunk(UserID))\r\n\r\n}\r\n\r\n\r\nexport default DialogsReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst follow = 'Users/FOLLOW'\r\nconst unfollow = 'Users/UNFOLLOW'\r\nconst setusers = 'Users/SET_USERS'\r\nconst Set_Current_Page= 'Users/SET_CURRENT_PAGE'\r\nconst Set_Total_Count_Of_Users = 'Users/Set_Total_Count_Of_Users'\r\nconst IsFetching_Toggle = 'Users/Toggle_is_fetching'\r\nconst IsInProcess_Togle = 'Users/IsInProcess_Togle'\r\nconst Portion_Size_Changer='Users/Portion_Size_C                                                                hanger'\r\nconst Set_Founded_User='Users/Set_Founded_User'\r\n\r\nlet DefaultState = {\r\n        Users: [],\r\n        pageSize : 20,\r\n        totalUsersCount:0,\r\n        currentPage : 1,\r\n         IsFetching : false,\r\n        InProcess : [],\r\n    PortionSize : 1,\r\n    FoundedUser : null\r\n}\r\n\r\nconst UsersReducer =  (state = DefaultState,action) => {\r\n    switch (action.type) {\r\n        case follow: {\r\n        return {\r\n          ...state,\r\n          Users:state.Users.map(us =>  {\r\n              if (us.id === action.userID) {\r\n                  return {\r\n                      ...us,\r\n                      followed:true\r\n                  }\r\n              }\r\n              return us\r\n          })\r\n        }\r\n    }\r\n        case unfollow: {\r\n            return {\r\n                ...state,\r\n                Users: state.Users.map(us =>{\r\n                    if(us.id === action.userID){\r\n                        return {\r\n                            ...us,\r\n                            followed:false\r\n                        }\r\n                    }\r\n                    return us\r\n                })\r\n            }\r\n        }\r\n        case setusers:{\r\n            return {...state, Users: action.users}\r\n        }\r\n        case Set_Current_Page:{\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case Set_Total_Count_Of_Users:{\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case IsInProcess_Togle:{\r\n            return {...state,\r\n                InProcess : action.InProgress ?\r\n                    [...state.InProcess, action.UserID]\r\n                    : state.InProcess.filter(id => id !== action.UserID)\r\n            }\r\n        }\r\n        case Portion_Size_Changer:{\r\n            return {...state,PortionSize : action.PortionSizeChangingValue}\r\n        }\r\n        case Set_Founded_User:{\r\n            return {...state, FoundedUser : action.NewFoundedUser}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const OnFollow = (userID) => {\r\n    return {type : follow,userID:userID }\r\n}\r\nexport const onUnFollow = (userID) => {\r\n    return {type : unfollow, userID:userID }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type : setusers, users:users }\r\n}\r\nexport const SetCurrentPage = (currentPage) => {\r\n    return {type : Set_Current_Page, currentPage: currentPage}\r\n}\r\nexport const SetTotalCountOfUsers = (totalCount) => {\r\n    return {type : Set_Total_Count_Of_Users, totalUsersCount: totalCount}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\nexport const ToggleInProcess = (InProgress,UserID) => {\r\n    return {type : IsInProcess_Togle, InProgress,UserID}\r\n}\r\n\r\nexport const ChangePortionSize = (value) => {\r\n    return {type : Portion_Size_Changer, PortionSizeChangingValue : value }\r\n}\r\nexport const SetFoundedUser = (NewFoundedUser) => {\r\n    return {type : Set_Founded_User, NewFoundedUser }\r\n}\r\n\r\nexport const getUsersThunk = (currentPage,pageSize) =>async (dispatch) =>{\r\n        dispatch (ToggleIsFetching(true))\r\n       const data = await API.getUsers(currentPage,pageSize)\r\n            dispatch(ToggleIsFetching(false))\r\n            dispatch( setUsers(data.items))\r\n            dispatch(SetTotalCountOfUsers(data.totalCount))\r\n    }\r\n\r\nexport  const  unfollowThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n       const data = await API.DelSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(onUnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport  const  followThunk = (userID) =>async (dispatch) =>{\r\n        dispatch(ToggleInProcess(true,userID))\r\n      const data = await API.AddSub(userID)\r\n            if (data.resultCode == 0) {\r\n                dispatch(OnFollow(userID))\r\n            }\r\n            dispatch(ToggleInProcess(false,userID))\r\n    }\r\n\r\nexport const FindUserThunk = (UserName) =>async (dispatch) =>{\r\n    dispatch (ToggleIsFetching(true))\r\n    const data = await API.FindUser(UserName)\r\n    if(!data.data.error)\r\n    {\r\n        dispatch(ToggleIsFetching(false))\r\n        dispatch(SetFoundedUser(data.data))\r\n    }else {\r\n        dispatch(stopSubmit(\"FindUser\", {_error: data.data.error.messages[0]}))\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'Auth/SET_USER_DATA'\r\nconst IsFetching_Toggle = 'Auth/IsFetching_Toggle'\r\nconst Set_Captcha_Url = 'Auth/Set_Captcha_Url'\r\n\r\nlet DefaultState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    IsLogined: false,\r\n    IsFetching: false,\r\n    CaptchaUrl : null\r\n}\r\n\r\nconst AuthReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA : {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        case IsFetching_Toggle: {\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        case Set_Captcha_Url: {\r\n            return {...state, CaptchaUrl: action.CaptchaURLFromServer}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const SetAuthUser = (userId, email, login, IsLogined) =>\r\n    ({type: SET_USER_DATA, data: {userId, email, login, IsLogined}})\r\n\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type: IsFetching_Toggle, IsFetching}\r\n}\r\nexport const SetCaptchaUrl = (CaptchaURLFromServer) => {\r\n    return {type: Set_Captcha_Url, CaptchaURLFromServer}\r\n}\r\n\r\nexport const AuthMeThunk = () => async (dispatch) => {\r\n    ToggleIsFetching(true)\r\n    const data = await API.AuthMe() //возвращает данные авторизованного юзера\r\n    dispatch(ToggleIsFetching(false))\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(SetAuthUser(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const LoginThunk = (email, password, rememberMe = false,captcha) =>\r\n    async (dispatch) => {\r\n        const data = await API.Login(email, password, rememberMe,captcha)\r\n        if (data.resultCode === 0) {\r\n            dispatch(AuthMeThunk())\r\n        } else {\r\n            if(data.resultCode === 10){\r\n                dispatch(GetCaptchaThunk())\r\n            }\r\n            dispatch(stopSubmit(\"login\", {_error: data.messages[0]}))\r\n        }\r\n    }\r\n\r\nexport const LogOutThunk = () => async (dispatch) => {\r\n    const data = await API.LogOut()\r\n    if (data.resultCode === 0) {\r\n        dispatch(SetAuthUser(null, null, null, false))\r\n    }\r\n}\r\nexport const GetCaptchaThunk = () => async (dispatch) => {\r\n    const data = await API.GetCaptchaFromServer()\r\n    const captchaURL= data.url\r\n        dispatch(SetCaptchaUrl(captchaURL))\r\n\r\n}\r\n\r\n\r\nexport default AuthReducer","import {AuthMeThunk} from \"../data/AuthReducer\"\r\nimport {GetProfileThunk} from \"./ProfileReduser\";\r\n\r\nconst INITIALIZATED = 'Init/INITIALIZATED'\r\n\r\nlet DefaultState = {inition: false}\r\n\r\nconst InitializateReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZATED : {\r\n            return {\r\n                ...state,\r\n                inition: true\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializating = () => ({type: INITIALIZATED})\r\n\r\n\r\n\r\nexport const InitializationAPPthunk = () => async (dispatch,getState) => {\r\n\r\n        let promise = dispatch(AuthMeThunk())\r\n       await Promise.all([promise]);\r\n    const MyId = getState().Auth.userId\r\n    if(MyId){\r\n        dispatch(GetProfileThunk(MyId))\r\n    }\r\n            dispatch(initializating())\r\n    }\r\n\r\nexport default InitializateReducer","import {API} from \"../API/requests\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_TO_DO_LISTS = 'ToDoLists/SET_TO_DO_LISTS';\r\nconst SET_TO_DO_LIST_TASKS_Page = 'ToDoLists/SET_TO_DO_LIST_TASKS_Page';\r\nconst SET_TO_DO_LISTS_TASKS_Count = 'ToDoLists/SET_TO_DO_LISTS_TASKS_Count';\r\nconst SET_TO_DO_LIST_TASKS = 'ToDoLists/SET_TO_DO_LIST_TASKS';\r\nconst IsFetching_Toggle = 'ToDoLists/IsFetching_Toggle';\r\n\r\n\r\nlet DefaultState = {\r\n    ToDoLists: [],\r\n    ToDoListTasks : [],\r\n    ToDoListTasksPage: 1,\r\n    ToDoListTasksCount: 10,\r\n    IsFetching : false\r\n}\r\n\r\nconst ToDoListsReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_TO_DO_LISTS: {\r\n            return {...state, ToDoLists: action.NewToDoLists}\r\n        }\r\n        case SET_TO_DO_LIST_TASKS_Page: {\r\n            return {...state, ToDoListTasksPage: action.NewToDoListTasksPage}\r\n        }\r\n        case SET_TO_DO_LISTS_TASKS_Count: {\r\n            return {...state, ToDoListTasksCount: action.NewToDoListTasksCount}\r\n        }\r\n       case SET_TO_DO_LIST_TASKS: {\r\n            return {...state, ToDoListTasks: action.Tasks}\r\n        }\r\n\r\n        /*case SET_TO_DO_LIST_TASKS: {\r\n            let NewTask = {\r\n                ListId: action.ListID,\r\n                TaskData: action.Tasks,\r\n\r\n            };\r\n\r\n          if(state.ToDoListTasks.every(el=>el.ListId !== action.ListID)) {\r\n                return {\r\n                    ...state,\r\n                    ToDoListTasks: [...state.ToDoListTasks, NewTask]\r\n                }\r\n            }\r\n          else return {\r\n              ...state,\r\n              ToDoListTasks: [...state.ToDoListTasks.filter(item=>{return item.ListId === action.ListID}).TaskData, action.Tasks]\r\n              }\r\n        }*/\r\n\r\n        case IsFetching_Toggle:{\r\n            return {...state, IsFetching: action.IsFetching}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const SetToDoLists = (NewToDoLists) => {\r\n    return {type: SET_TO_DO_LISTS, NewToDoLists}\r\n}\r\nexport const SetToDoListTasksPage = (NewToDoListTasksPage) => {\r\n    return {type: SET_TO_DO_LIST_TASKS_Page, NewToDoListTasksPage}\r\n}\r\nexport const SetToDoListTasksCount = (NewToDoListTasksCount) => {\r\n    return {type: SET_TO_DO_LISTS_TASKS_Count, NewToDoListTasksCount}\r\n}\r\nexport const SetToDoListTasks = (Tasks) => {\r\n    return {type: SET_TO_DO_LIST_TASKS, Tasks}\r\n}\r\nexport const ToggleIsFetching = (IsFetching) => {\r\n    return {type : IsFetching_Toggle, IsFetching}\r\n}\r\n\r\n\r\n\r\nexport const GetToDoListsThunk = () => async (dispatch) => {\r\n    const ResponseData = await API.GetToDoLists()\r\n    dispatch(SetToDoLists(ResponseData.data))\r\n}\r\n\r\nexport const AddNewToDoListsThunk = (title) => async (dispatch) => {\r\n await API.CreateNewToDoList(title)\r\n        dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const DeleteToDoListThunk = (ToDoListID) => async (dispatch) => {\r\n    await API.DeleteToDoList(ToDoListID)\r\n    dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const ChangeToDoListTitleThunk = (ToDoListID, Newtitle) => async (dispatch) => {\r\n    await API.ChangeToDoListTitle(ToDoListID, Newtitle)\r\n        dispatch(GetToDoListsThunk())\r\n}\r\n\r\nexport const GetToDoListTasksThunk = (ToDoListID, count,page) => async (dispatch) => {\r\n    dispatch(ToggleIsFetching(true))\r\n   const DataResponse = await API.GetToDoListTasks(ToDoListID, count, page)\r\n    if(!DataResponse.data.error) {\r\n        dispatch(SetToDoListTasks(DataResponse.data))\r\n    }\r\n    dispatch(ToggleIsFetching(false))\r\n}\r\n\r\nexport const AddNewTaskThunk = (ToDoListID, TaskTitle) => async (dispatch) => {\r\n  const DataResponse = await API.CreateNewTakForToDoList(ToDoListID, TaskTitle)\r\n    if(DataResponse.data.resultCode === 0) {\r\n        dispatch(GetToDoListTasksThunk(ToDoListID))\r\n    }\r\n}\r\nexport const DeleteTaskThunk = (ToDoListID,TaskId) => async (dispatch) => {\r\n    const DataResponse = await API.DeleteTaskFromToDoList(ToDoListID,TaskId)\r\n    if(DataResponse.data.resultCode === 0) {\r\n        dispatch(GetToDoListTasksThunk(ToDoListID))\r\n    }\r\n}\r\nexport const UpdateTaskInformationThunk = (ToDoListID,TaskId,status) => async (dispatch) => {\r\n    const DataResponse = await API.ChangeTaskInformation(ToDoListID,TaskId,status)\r\n    if(DataResponse.data.resultCode === 0) {\r\n        dispatch(GetToDoListTasksThunk(ToDoListID))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ToDoListsReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./ProfileReduser\";\r\nimport DialogsReducer from \"./DIalogsReduser\";\r\nimport UsersReducer from \"./UsersReduser\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport  thunkMiddleWare from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport InitializateReducer from \"./InitializatonReducer\";\r\nimport ToDoListsReducer from \"./ToDoListsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfileData: ProfileReducer,\r\n    MessagesData: DialogsReducer,\r\n    UsersData : UsersReducer,\r\n    Auth : AuthReducer,\r\n    form : formReducer,\r\n    Init :  InitializateReducer,\r\n    ToDoListsData : ToDoListsReducer\r\n})\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunkMiddleWare))\r\n\r\nwindow.store = store;\r\nexport default store\r\n","import React from 'react';\r\nimport HS from \"./Header.module.css\"\r\n\r\n\r\n\r\nconst LogOutButton =(props) =>{\r\n    const LogOut = ()=>{\r\n        props.LogOutThunk()\r\n        props.handleMenuClose()\r\n    }\r\n\r\nreturn <div>\r\n    <div className={HS.LogOutStyle} onClick={LogOut}>\r\n        Logout\r\n    </div>\r\n</div>\r\n}\r\n\r\nexport default LogOutButton","import React, {useState} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircleHeader from '@material-ui/icons/AccountCircle';\r\nimport hs from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport LogOutButton from \"./LogOutButton\";\r\n\r\n\r\nconst AccountIconComponent = (props) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <div className={hs.accountIconUserName}>\r\n                    {props.OwnName && props.OwnName}\r\n            </div>\r\n\r\n            <div className={`${hs.item} ${hs.active}`}>\r\n            <NavLink to=\"/Profile/\">\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            </NavLink>\r\n            </div>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                     My account\r\n            </MenuItem>\r\n\r\n            <MenuItem >\r\n                <LogOutButton\r\n                    handleMenuClose={handleMenuClose}\r\n                    LogOutThunk={props.LogOutThunk}\r\n                />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return <div>\r\n            <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountCircleHeader />\r\n            </IconButton>\r\n                {renderMenu}\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default AccountIconComponent;\r\n","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge/Badge\";\r\nimport MailIconHeader from '@material-ui/icons/Mail';\r\n\r\n\r\n\r\nconst MessagesIcon = (props) =>{\r\n\r\n    return  <div>\r\n        <div >\r\n            <IconButton aria-label= \"show 11 new mails\" color=\"inherit\">\r\n                <Badge\r\n                    badgeContent={props.NewMessagesCount.toString()}\r\n                    color=\"secondary\">\r\n                    <MailIconHeader />\r\n                </Badge>\r\n            </IconButton></div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default MessagesIcon","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport UsersIcon from '@material-ui/icons/People';\r\n\r\n\r\n\r\nconst MessagesIcon = (props) =>{\r\n    return <div>\r\n        <div >\r\n            <IconButton  color=\"inherit\">\r\n                    <UsersIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MessagesIcon","import React from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListIcon from '@material-ui/icons/ListAlt';\r\n\r\n\r\n\r\nconst ToDoListsIcon = (props) =>{\r\n    return <div>\r\n        <div >\r\n            <IconButton  color=\"inherit\">\r\n                <ListIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ToDoListsIcon","import React,{useEffect,useState} from 'react';\r\nimport hc from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AccountIconComponent from \"./AcountIcon\";\r\nimport MessagesIcon from \"./MessagesIcon\";\r\nimport UsersIcon from \"./UsersIcon\"\r\nimport ToDoListsIcon from \"./ToDoListsIcon\";\r\n\r\nconst Header = (props) => {\r\n\r\nlet [NMC,SetNMC] = useState(props.NewMessagesCount)\r\n\r\n    useEffect(() => {\r\n        SetNMC(props.NewMessagesCount)\r\n        }, [props.NewMessagesCount]\r\n    )\r\n\r\n    return <header className={hc.header}>\r\n        <div className={hc.item}>\r\n            {props.IsLogined\r\n                ?\r\n                <div className={hc.IconsWrapper}>\r\n\r\n                    <div className={hc.startPosition}>\r\n\r\n                    </div>\r\n                    <div className={`${hc.item} ${hc.active}`}>\r\n                        <NavLink activeClassName={hc.active} to={\"/ToDoLists/\"}>\r\n                            <ToDoListsIcon/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className={`${hc.item} ${hc.active}`}>\r\n                        <NavLink activeClassName={hc.active} to={\"/Users/\"}>\r\n                            <UsersIcon/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                    <div className={hc.MessagesIconPosition}>\r\n                        <div className={`${hc.item} ${hc.active}`}>\r\n                            <NavLink activeClassName={hc.active} to={\"/Dialogs/\"}>\r\n                                <MessagesIcon NewMessagesCount={NMC}/>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <AccountIconComponent LogOutThunk={props.LogOutThunk}\r\n                                          UserProfile={props.UserProfile}\r\n                                          OwnName={props.OwnName}\r\n                    />\r\n                </div>\r\n                :\r\n                <div className={hc.loginPosition}>\r\n                    <NavLink className={hc.loginButton} to={'/login'}>\r\n                        Login\r\n                    </NavLink>\r\n                </div>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;\r\n","import React from 'react'\r\nimport LoadingSvg from '../../../assetss/images/loader1.gif';\r\nimport hc from '../../../Header/Header.module.css'\r\n\r\nlet Preloader = (props) =>{\r\n    return <img className={hc.loader} src={LoadingSvg}/>\r\n}\r\nexport default Preloader","export const GetProfileSelector = (state) =>{\r\n    return state.ProfileData.profile\r\n}\r\nexport const GetStatusSelector = (state) =>{\r\n    return state.ProfileData.status\r\n}\r\nexport const GetIsMyPageSelector = (state) =>{\r\n    return state.ProfileData.IsMyPage\r\n}\r\nexport const GetPostsSelector = (state) =>{\r\n    return state.ProfileData.Posts\r\n}\r\nexport const GetOwnNameSelector = (state) =>{\r\n    return state.ProfileData.OwnName\r\n}\r\n\r\n\r\n","export const GetUserIDSelector = (state) =>{\r\n    return state.Auth.userId\r\n}\r\nexport const GetIsLoginedSelector = (state) => {\r\n    return state.Auth.IsLogined\r\n}\r\nexport const GetLoginSelector = (state) => {\r\n    return state.Auth.login\r\n}\r\nexport const GetIsFetchingSelector = (state) => {\r\n    return state.Auth.IsFetching\r\n}","export const GetinitionSelector = (state) =>{\r\n    return state.Init.inition\r\n}\r\nexport const GetNewMessagesCountSelector = (state) =>{\r\n    return state.MessagesData.NewMessagesCount\r\n}","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogOutThunk} from \"../../data/AuthReducer\";\r\nimport {GetOwnNameSelector, GetProfileSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetNewMessagesCountThunk} from \"../../data/DIalogsReduser\"\r\nimport {\r\n    GetIsFetchingSelector,\r\n    GetIsLoginedSelector,\r\n    GetLoginSelector,\r\n    GetUserIDSelector\r\n} from \"../../data/AuthSelectors\";\r\nimport {GetNewMessagesCountSelector} from \"../../data/InitialozationSelectors\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        if(this.props.IsLogined){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.IsLogined !== prevProps.IsLogined ){\r\n            this.props.GetNewMessagesCountThunk()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.IsFetching ? <Preloader/> :null}\r\n          <Header {...this.props} />\r\n          </>\r\n    }\r\n\r\n}\r\nlet MapStateToProps = (state) => ({\r\n    IsFetching : GetIsFetchingSelector(state),\r\n    IsLogined: GetIsLoginedSelector(state),\r\n    login:GetLoginSelector(state),\r\n    UserProfile: GetProfileSelector(state),\r\n    OwnID : GetUserIDSelector(state),\r\n    OwnName : GetOwnNameSelector(state),\r\n    NewMessagesCount : GetNewMessagesCountSelector(state)\r\n})\r\n\r\nexport default HeaderContainer = connect(MapStateToProps,\r\n    {LogOutThunk,GetNewMessagesCountThunk})\r\n(HeaderContainer);\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport d from \"./Dialogs.module.css\";\r\nimport UserPhoto from \"./../assetss/images/userPhoto.jpg\"\r\nimport pc from \"../Profile/UserInfo/UserInfo.module.css\";\r\n\r\n\r\nconst DialogInfo = (props) => {\r\n\r\n    const date = props.MessageSendTime.split(\"T\")[0]\r\n    const time = props.MessageSendTime.split(\"T\")[1].split(\".\")[0]\r\n    return <div className={d.DialogArea}>\r\n        <div className={`${d.item} ${d.active}`}>\r\n        <NavLink   to={`/messages/${props.UserID}`}>\r\n        <div className={d.Main}>\r\n            <div className={pc.UserName}>\r\n                   {props.DialogUserName}\r\n                   <div>\r\n                {props.DialogUserAvatar ?\r\n                    <NavLink to={'/Profile/' + props.UserID}>\r\n                    <img className={d.DialogUserPhoto} src={props.DialogUserAvatar}/>\r\n                    </NavLink>\r\n                    :\r\n                    <NavLink to={'/Profile/' + props.UserID}>\r\n                    <img  className={d.DialogUserPhoto} src = {UserPhoto} />\r\n                    </NavLink>\r\n                }\r\n                   </div>\r\n            </div >\r\n            <div className={d.padding}>\r\n                    {props.NewMessagesCount  !== 0 ?\r\n                        \"you have a \" + props.NewMessagesCount + \" new messages\"\r\n                        : \"you don't have a new messages\"}\r\n            </div>\r\n            <div className={d.padding}>\r\n                {\r\n                    props.MessageSendTime ?\r\n                    <div>\r\n                        last message was :\r\n                        <div>\r\n                            {date}\r\n                        </div>\r\n                        <div>\r\n                            {time}\r\n                        </div>\r\n                    </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        </div>\r\n        </NavLink>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogInfo;","import React from 'react'\r\nimport DialogInfo from \"./DialogInfo\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (<div >\r\n\r\n            {props.MessagesData.AllDialogs.map(el => {\r\n                return <DialogInfo key={el.id} DialogUserName={el.userName}\r\n                               DialogUserAvatar={el.photos.small ?\r\n                                   el.photos.small\r\n                                   : el.photos.large}\r\n                               NewMessagesCount={el.newMessagesCount}\r\n                               MessageSendTime={el.lastDialogActivityDate}\r\n                               UserID={el.id}\r\n                />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet MapStateToPropsForRedirect = (state)=>{\r\n    return{\r\n        IsLogined : state.Auth.IsLogined\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) =>{\r\nclass RedirectComp extends React.Component {\r\n    render() {\r\n        if (!this.props.IsLogined) {\r\n            // редирект на страничку авторизации\r\n            return <Redirect to={\"/Login\"} />\r\n        }\r\n        return <Component {...this.props} />\r\n    }\r\n}\r\nlet ConectedAuthRedirectComp = connect(MapStateToPropsForRedirect)(RedirectComp)\r\nreturn ConectedAuthRedirectComp\r\n}","export const GetAllDialogsSelector = (state) =>{\r\n    return state.MessagesData.AllDialogs\r\n}\r\nexport const GetMessagesDataSelector = (state) =>{\r\n    return state.MessagesData\r\n}\r\n/*export const GetDialogsMessagesSelector = (state) =>{\r\n    return state.MessagesData.DialogsMessages\r\n}\r\nexport const GetUserAvatarSelector = (state) =>{\r\n    return state.MessagesData.UserAvatar\r\n}\r\nexport const GetinterlocutorAvatarSelector = (state) =>{\r\n    return state.MessagesData.InterlocutorAvatar\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {SetNewMessages,GetAllDialogsThunk,\r\n    GetNewMessagesThunk,SendNewMessageThunk} from \"../../data/DIalogsReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../hocs/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {GetAllDialogsSelector, GetMessagesDataSelector} from \"../../data/DialogsSelectors\";\r\nimport { withRouter} from 'react-router-dom'\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n      this.props.GetAllDialogsThunk()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialogs {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n MessagesData: GetMessagesDataSelector(state),\r\n    AllDialogs : GetAllDialogsSelector(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps, {SetNewMessages,\r\n        GetAllDialogsThunk,GetNewMessagesThunk,SendNewMessageThunk}),\r\n    AuthRedirect,\r\n    withRouter)(DialogsContainer)","import PS from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\"\r\n\r\nconst Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize) // расчет кол-ва страниц\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let [PortionNumber, SetPortionNumber] = useState(1)\r\n    let LeftBorderOfPortion = (PortionNumber - 1) * props.PortionSize + 1\r\n    let RightBorderOfPortion = PortionNumber * props.PortionSize\r\n    let PortionCount = Math.ceil(pagesCount / props.PortionSize) // расчет кол-ва порций\r\n\r\n    return <div className={PS.setNumbers}>\r\n        <div className={PS.NumbersFont}>\r\n        {PortionNumber > 1 &&\r\n        <button className={PS.button} onClick={() => {\r\n            SetPortionNumber(PortionNumber - 1)\r\n        }}> back </button>}\r\n        {pages.filter(p => p >= LeftBorderOfPortion && p <= RightBorderOfPortion).map((p) => {\r\n            // нумерация страниц\r\n            return (\r\n\r\n                <span className={props.currentPage === p && PS.numbers}\r\n                      onClick={(ev) => {\r\n                          props.OnChangedPage(p)\r\n                      }}>\r\n                            {\"    \" + p}\r\n                        </span>\r\n\r\n            )\r\n        })}\r\n        &nbsp;&nbsp;\r\n        {PortionCount > PortionNumber &&\r\n\r\n        <button className={PS.button} onClick={() => {\r\n            SetPortionNumber(PortionNumber + 1)\r\n        }}>next </button>}\r\n    </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport um from \"./Users.module.css\";\r\nimport UserPhoto from \"../assetss/images/userPhoto.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport pc from \"../Profile/UserInfo/UserInfo.module.css\";\r\n\r\n\r\nlet User = (props) => {\r\n\r\n    return <div className={um.Main}>\r\n        <div>\r\n\r\n            <NavLink to={'/Profile/' + props.user.id}>\r\n                <img className={um.img} src={props.user.photos.small != null ? props.user.photos.small : UserPhoto}/>\r\n            </NavLink>\r\n            <div  className={pc.UserName}>\r\n                {props.user.name}\r\n            </div>\r\n            { props.IsLogined ?\r\n            <div>\r\n\r\n                { props.user.followed\r\n                        ? <button disabled={props.InProcess.some(id =>  id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.OnUnFollow(props.user.id)\r\n                                  }} className={um.unfollow}>\r\n                            unfollow\r\n                        </button>\r\n\r\n\r\n                        : <button disabled={props.InProcess.some(id => id === props.user.id)}\r\n                                  onClick={() => {\r\n                                      props.OnFollow(props.user.id)\r\n                                  }} className={um.follow}>\r\n                            follow\r\n                        </button>\r\n                }\r\n            </div>\r\n                :null\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default User","import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n const  FindUserModal = (props)=> {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleSubmit = () => {\r\n        alert(document.getElementById('FindingUserName').value)\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Button  variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                Search user\r\n            </Button>\r\n            <Dialog    open={open} onClose={handleClose} >\r\n                <DialogTitle >Search user by name</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                       enter user name with you looking for\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"FindingUserName\"\r\n                        type=\"userName\"\r\n                        fullWidth\r\n                        name=\"finduser\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Go back\r\n                    </Button>\r\n                    <Button onClick={props.SubmitModal} color=\"primary\">\r\n                        Search\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\nexport default FindUserModal","import React, {useEffect, useState} from \"react\"\r\nimport FUStyles from \"./FindUser.module.css\";\r\nimport User from \"./User\";\r\nimport FindUserModal from \"../MaterialUI/ModalWindow/UserSearchModal\";\r\n\r\n\r\nconst FindUser = (props) => {\r\n    let [FoundedUser, SetFoundedUser] = useState(props.FoundedUser)\r\n    useEffect(() => {\r\n            SetFoundedUser(props.FoundedUser)\r\n        }, [props.FoundedUser]\r\n    )\r\n\r\n    let [FoundingMode, SetFoundingMode] = useState(false)\r\n\r\n    const FoundingModeON = () => {\r\n        SetFoundingMode(true)\r\n\r\n    }\r\n    const FoundingModeOFF = () => {\r\n        SetFoundingMode(false)\r\n    }\r\n\r\n\r\n    const FindUser = (OnSubmitData) => {\r\n        props.FindUserThunk(document.getElementById('FindingUserName').value)\r\n        FoundingModeON()\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!FoundingMode ?\r\n            <div className={FUStyles.FindUserButton}>\r\n                <FindUserModal SubmitModal={FindUser}/>\r\n            </div>\r\n\r\n            :\r\n            <div>\r\n                <div className={FUStyles.foundArea}>\r\n\r\n\r\n\r\n                    {FoundedUser &&\r\n                    <div>\r\n                        <h2 className={FUStyles.SearchingResult}>\r\n                            Searching result :\r\n                            <div>\r\n\r\n                                {FoundedUser && FoundedUser.items.length === 0 ?\r\n                                    \"no one user with this name\"\r\n                                    : \"founded \" + FoundedUser.items.length + \" users \"}\r\n\r\n                            </div>\r\n                        </h2>\r\n\r\n                        <div className={FUStyles.FoundedUsers}>\r\n                            <div className={FUStyles.FoundedUsersWrapper}>\r\n                            {FoundedUser.items.map(item => <User user={item}\r\n                                                                 key={item.id}\r\n                                                                 InProcess={props.InProcess}\r\n                                                                 OnUnFollow={props.OnUnFollow}\r\n                                                                 OnFollow={props.OnFollow}\r\n                                                                 IsLogined={props.IsLogined}/>)}\r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    }\r\n\r\n                </div>\r\n                <button\r\n                    className={FUStyles.GoBack}\r\n                    onClick={FoundingModeOFF}>\r\n                    go back\r\n                </button>\r\n            </div>\r\n\r\n        }\r\n\r\n    </div>\r\n\r\n}\r\nexport default FindUser","import React from 'react'\r\nimport Paginator from \"../assetss/common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport FindUser from \"./FindUser\";\r\nimport us from \"./Users.module.css\"\r\n\r\n\r\n\r\n\r\nlet PurifyUsers = (props) => {\r\n\r\n\r\n    {props.ChangePortionSize(15)}\r\n    return <div>\r\n\r\n            <FindUser  FindUserThunk={props.FindUserThunk}\r\n                      FoundedUser={props.FoundedUser}\r\n                      InProcess={props.InProcess}\r\n                      OnUnFollow={props.OnUnFollow}\r\n                      OnFollow={props.OnFollow}\r\n                      IsLogined={props.IsLogined}\r\n            />\r\n\r\n        <div className={us.UsersWrapper}>\r\n        { props.Users.map(us =>  <User\r\n            user={us}\r\n            key={us.id}\r\n            InProcess={props.InProcess}\r\n            OnUnFollow={props.OnUnFollow}\r\n            OnFollow={props.OnFollow}\r\n            IsLogined={props.IsLogined}\r\n        />)\r\n        }\r\n        </div>\r\n\r\n        <div className={us.PaginatorPosition}>\r\n       <Paginator OnChangedPage={props.OnChangedPage}\r\n                  currentPage={props.currentPage}\r\n                  totalUsersCount={props.totalUsersCount}\r\n                      pageSize={props.pageSize}\r\n                  PortionSize={props.PortionSize}\r\n       />\r\n        </div>\r\n    </div>\r\n}\r\nexport default PurifyUsers","export const GetUsers = (state) =>{\r\n    return state.UsersData.Users\r\n}\r\nexport const GetPageSize = (state) =>{\r\n    return state.UsersData.pageSize\r\n}\r\nexport const GetTotalUsersCount = (state) =>{\r\n    return state.UsersData.totalUsersCount\r\n}\r\n\r\nexport const GetCurrentPage = (state) =>{\r\n    return  state.UsersData.currentPage\r\n}\r\nexport const GetIsFeching = (state) =>{\r\n    return state.UsersData.IsFetching\r\n}\r\nexport const GetInProgress = (state) => {\r\n    return state.UsersData.InProcess\r\n}\r\n\r\nexport const GetPortionSize = (state) => {\r\n    return state.UsersData.PortionSize\r\n}\r\nexport const GetFoundedUserSelector = (state) => {\r\n    return state.UsersData.FoundedUser\r\n}\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunk,\r\n    unfollowThunk,\r\n    SetCurrentPage,\r\n    getUsersThunk,\r\n    ToggleInProcess,\r\n    ChangePortionSize,FindUserThunk\r\n} from \"../../data/UsersReduser\";\r\nimport PurifyUsers from \"./Users\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    GetCurrentPage,\r\n    GetInProgress,\r\n    GetIsFeching,\r\n    GetPageSize,\r\n    GetTotalUsersCount,\r\n    GetUsers,\r\n    GetPortionSize, GetFoundedUserSelector\r\n} from \"../../data/Users-Selectors\";\r\nimport { GetIsLoginedSelector} from \"../../data/AuthSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    /* this component using for make requests on server for a new users and drawing\r\nUi component (Users)*/\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    OnChangedPage = (pageNumber) => {\r\n        this.props.SetCurrentPage(pageNumber)\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.IsFetching ? <Preloader/> : null}\r\n            <PurifyUsers Users={this.props.Users}\r\n                         totalUsersCount={this.props.totalUsersCount}\r\n                         pageSize={this.props.pageSize}\r\n                         OnChangedPage={this.OnChangedPage}\r\n                         OnFollow={this.props.followThunk}\r\n                         OnUnFollow={this.props.unfollowThunk}\r\n                         currentPage={this.props.currentPage}\r\n                         ToggleInProcess={this.props.ToggleInProcess}\r\n                         InProcess={this.props.InProcess}\r\n                         IsLogined={this.props.IsLogined}\r\n                         ChangePortionSize={this.props.ChangePortionSize}\r\n                         PortionSize={this.props.PortionSize}\r\n                         FindUserThunk={this.props.FindUserThunk}\r\n                         FoundedUser={this.props.FoundedUser}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => {\r\n    return {\r\n        IsLogined : GetIsLoginedSelector(state),\r\n        Users: GetUsers(state),\r\n        pageSize: GetPageSize(state),\r\n        totalUsersCount: GetTotalUsersCount(state),\r\n        currentPage: GetCurrentPage(state),\r\n        IsFetching: GetIsFeching(state),\r\n        InProcess: GetInProgress(state),\r\n        PortionSize : GetPortionSize(state),\r\n        FoundedUser : GetFoundedUserSelector(state)\r\n    }\r\n}\r\n\r\n/*let DispatchToProps = (dispatch) => {\r\n    return {\r\n        onFollow: (userID) => {\r\n\r\n            dispatch(follow_AC(userID))\r\n        },\r\n        onUnFollow: (userID) => {\r\n\r\n            dispatch(unfollow_AC(userID))\r\n        },\r\n        setUsers: (Users) => {\r\n            dispatch(setUsers_AC(Users))\r\n        },\r\n        SetCurrentPage: (NumberOfPage) => {\r\n            dispatch(setCurrentPage_AC(NumberOfPage))\r\n        },\r\n        SetTotalCountOfUsers: (totalCount) => {\r\n            dispatch(SetTotalCountOfUsers_AC(totalCount))\r\n        },\r\n        ToggleIsFetching: (IsFetching) => {\r\n            dispatch(IsFetchingToggle_AC(IsFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\nexport default compose(\r\n    connect(StateToProps,\r\n        {followThunk, unfollowThunk, SetCurrentPage,\r\n            ToggleInProcess, getUsersThunk,ChangePortionSize,FindUserThunk})\r\n)(UsersContainer)","import React, {useState, useEffect} from \"react\"\r\n\r\nconst ProfileStatusF = (props) => {\r\n\r\n\r\n    let [IsStatusChanging, SetIsStatusChanging] = useState(false)\r\n    let [Status, SetStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n            SetStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    const StatusChangingON = () => {\r\n        SetIsStatusChanging(true)\r\n    }\r\n\r\n    const StatusChangingOFF = () => {\r\n        SetIsStatusChanging(false)\r\n        props.SetProfileStatus(Status)\r\n\r\n    }\r\n\r\n    const OnStatusChange = (e) => {\r\n        SetStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (<div>\r\n            {props.IsMyPage ?\r\n                <div>\r\n                    {!IsStatusChanging ?\r\n                        <div>\r\n                <span onDoubleClick={StatusChangingON}>\r\n                Status  : {Status || \"the status is empty\"\r\n                }\r\n                </span>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <input onChange={OnStatusChange} onBlur={StatusChangingOFF} autoFocus={true}\r\n                                   value={Status}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : Status || \"the status is empty\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusF","import React from \"react\"\r\nimport cs from \"./Contact.module.css\"\r\n\r\nconst Contact = (props) =>{\r\n\r\n\r\n    return <span>\r\n        {props.ContactValue &&\r\n        <div className={cs.contact} >\r\n        {props.ContactName} : {props.ContactValue}\r\n        </div>\r\n        }\r\n    </span>\r\n}\r\n\r\n\r\nexport default Contact","import React from \"react\"\r\nimport Contact from \"./Contact\";\r\nimport pds from \"./ProfileData.module.css\"\r\n\r\nconst ProfileData = (props) => {\r\nconst ProfileContacts = Object.keys(props.profile.contacts)\r\nconst ProfileContactsValues = ProfileContacts.map(el => props.profile.contacts[el])\r\nconst ValueNotNull = (values) =>{\r\n        return values !== null\r\n    }\r\n\r\n    return <div className={pds.aboutME}>\r\n        {\r\n            props.profile.aboutMe && <div>\r\n            {props.profile.aboutMe}\r\n        </div>\r\n        }\r\n\r\n        {\r\n            props.profile.lookingForAJob ?\r\n            <div>\r\n                Im looking for a job\r\n            </div>\r\n            :\r\n            <div>\r\n                Im have a job\r\n            </div>\r\n        }\r\n        {props.profile.lookingForAJobDescription &&\r\n        <div>\r\n            {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div className={pds.contacts}>\r\n            <div>\r\n                {props.IsMyPage && <button className={pds.buttonEditInformation}\r\n                                           onClick={props.ContactsEditingOn}>\r\n                    edit information\r\n                </button>}\r\n            </div>\r\n            {\r\n                ProfileContactsValues.some(ValueNotNull) ?\r\n                    \"My contacts :\"\r\n                    : null\r\n            }\r\n\r\n            {ProfileContacts.map(key => {\r\n                return <Contact key={key} ContactName={key}\r\n                                ContactValue={props.profile.contacts[key]}\r\n                                SetIsAnyContact={props.SetIsAnyContact}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileData","\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport React from \"react\"\r\nimport pc from './UserInfo.module.css'\r\nimport Done from '@material-ui/icons/AddAPhoto';\r\n\r\nconst ProfileAvatar = (props) => {\r\n\r\n    const OnPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.SetProfilePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n\r\n        <div>\r\n            {props.IsMyPage &&\r\n            <div className={pc.AddPhotoButtonPosition}>\r\n                <input className={pc.SelectPhoto} type={\"file\"}\r\n                       onChange={OnPhotoSelected}\r\n                       accept=\"image/*\"\r\n                       id={\"file\"}/>\r\n\r\n                <label htmlFor=\"file\">\r\n                    <Done   color=\"primary\"  />\r\n                </label>\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n        <div>\r\n            <img id={\"avatar\"} className={pc.UserPhoto}\r\n                 src={(props.photos.large && props.photos.small) == null ? UserPhoto : props.photos.large}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\nexport default ProfileAvatar","import React from 'react'\r\nimport EVS from \"./ElementsValidators.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const TextArea = ({input,meta,...props}) =>{\r\n\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n         <textarea className={EVS.textarea} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n            </div>\r\n    )\r\n\r\n}\r\nexport const TextAreaAboutMe = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.textareaAboutMe} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport const TextAreaMessage = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.TextAreaMessage} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const TextAreaDialogsMessage = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <textarea className={EVS.TextAreaDialogsMessage} {...input} {...props}/>\r\n            {meta.error && meta.touched ?  <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport const Input = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <div>\r\n            <input className={EVS.input} {...input} {...props}/>\r\n            </div>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const InputName = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n\r\n                <input className={EVS.input} {...input} {...props}/>\r\n\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const ContactFormInput = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n                <input className={EVS.ContactFormInput} {...input} {...props}/>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport const TaskFormInput = ({input,meta,...props}) =>{\r\n    return(\r\n        <div className={ meta.error && meta.touched ? EVS.formControl + \" \" + EVS.error : \"\"} >\r\n            <input  className={EVS.TaskFormInput} {...input} {...props}/>\r\n            {meta.error && meta.touched ?   <span> &nbsp;&nbsp; {meta.error}</span> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CreateField = (placeholder,name,validators,component,props ={},text =\"\") =>{\r\n  return  <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators}\r\n        component={component} {...props}/> {text}\r\n\r\n    </div>\r\n}","export const required = (value) =>{\r\n\r\nif(value ){\r\n    return undefined\r\n}\r\nelse return \"This field is required\"\r\n}\r\n\r\n\r\nexport const MaxLengthCreator = (MaxLengthValue) =>{\r\n    return(value =0 )=>{\r\nif(value && value.length > MaxLengthValue) {\r\n    return `Maximal length is a ${MaxLengthValue} symbols`\r\n}\r\nelse return undefined\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport {\r\n    Input,\r\n    CreateField,\r\n    TextAreaAboutMe,\r\n    ContactFormInput,InputName\r\n} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport pc from './UserInfo.module.css'\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\n\r\n\r\nconst max300=MaxLengthCreator(300)\r\nconst max150=MaxLengthCreator(150)\r\nconst max50=MaxLengthCreator(50)\r\n\r\nconst ProfileDataEditorForm = (props) => {\r\n\r\n    return <div className={pc.EditorFormBG}>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <button className={pc.buttonSaveChanges}>\r\n                Save changes\r\n            </button>\r\n            <button className={pc.buttonGoBack } onClick={props.ContactsEditingOFF}>\r\n                go back\r\n            </button>\r\n\r\n            <div className={pc.MyName}>\r\n                <b>My name is : </b>\r\n                {CreateField(\"Enter your full name\", \"fullName\", [required,max50], InputName)}\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <b>are u looking for a job? :</b>\r\n                {CreateField(\"\", \"lookingForAJob\", [max300], Input, {type: \"checkbox\"})}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills:</b>\r\n                {CreateField(\"Enter description\", \"lookingForAJobDescription\", [max150],\r\n                    TextAreaAboutMe)}\r\n            </div>\r\n            <div>\r\n                <b> about me:</b>\r\n                {CreateField(\"print something about you\", \"aboutMe\", [max300],\r\n                    TextAreaAboutMe)}\r\n            </div>\r\n\r\n            <div className={pc.MyContacts}>My contacts :</div>\r\n            {props.error\r\n                ?\r\n                <div className={pc.FormError}>\r\n                    {props.error}\r\n                </div>\r\n                : null}\r\n            <div className={pc.ContactsForm}>\r\n                {Object.keys(props.contacts).map(key => {\r\n                    return <div key={key}>\r\n                        {key} : {CreateField(key, \"contacts.\" + key, [max150], ContactFormInput)}\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n\r\n\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default ProfileDataEditorForm","import React, {useState} from \"react\"\r\nimport pds from \"./ProfileData.module.css\";\r\nimport lm from \"../../Login/login.module.css\";\r\nimport {CreateField, TextAreaMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport d from \"../../Dialogs/Dialogs.module.css\";\r\nimport pc from \"./UserInfo.module.css\";\r\n\r\nlet maxLength300 = MaxLengthCreator(300)\r\n\r\nconst SendMessageOnUserPageForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    {CreateField(\"Enter message text\", \"MessageFromUserPage\",\r\n                        [required, maxLength300], TextAreaMessage)}\r\n                </div>\r\n\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null\r\n                }\r\n                <div>\r\n                    <button className={pc.buttonSaveChanges}> send message</button>\r\n                    <button className={pc.buttonGoBack }\r\n                            onClick={props.MessageSendingModOFF}> go back </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxSendMessageOnUserPageForm = reduxForm({form: 'SendMessageForm'})(SendMessageOnUserPageForm)\r\n\r\nconst SendMessageOnUserPage = (props) => {\r\n\r\n    let [ChosedSendMessage, SetChosedSendMessage] = useState(false)\r\n\r\n\r\n    const MessageSendingModON = () => {\r\n        SetChosedSendMessage(true)\r\n    }\r\n\r\n    const MessageSendingModOFF = () => {\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.UserID, Formdata.MessageFromUserPage)\r\n        SetChosedSendMessage(false)\r\n    }\r\n\r\n\r\n    return (<div>\r\n\r\n\r\n            {!props.IsMyPage ?\r\n                <div>\r\n                    {!ChosedSendMessage ?\r\n                        <div>\r\n                            <button className={pds.buttonEditInformation} onClick={MessageSendingModON}>\r\n                                send message to {props.UserName}\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            < ReduxSendMessageOnUserPageForm\r\n                                onSubmit={SendNewMessage}\r\n                                MessageSendingModOFF={MessageSendingModOFF}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SendMessageOnUserPage","import React, {useState} from \"react\"\r\nimport pc from './UserInfo.module.css'\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport ProfileStatusF from \"./ProfileStatusF\";\r\nimport ProfileData from \"./ProfileData\"\r\nimport ProfileAvatar from \"./ProfileAvatar\";\r\nimport ProfileDataEditorForm from \"./ProfileDataEditorForm\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport SendMessageOnUserPage from \"./SendMessageOnUserPage\";\r\n\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    let [ContactsIsEditing, SetContactsIsEditing] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    const ContactsEditingOn = () => {\r\n        SetContactsIsEditing(true)\r\n    }\r\n\r\n    const ContactsEditingOFF = () => {\r\n        SetContactsIsEditing(false)\r\n    }\r\n\r\n    const PutNewProfileInfoToServer = (formData) => {\r\n\r\n      props.SaveProfileData(formData).then(()=>{\r\n          SetContactsIsEditing(false)\r\n      })\r\n    }\r\n\r\n    return <div className={pc.userdescrition}>\r\n        <div className={pc.ProfileName}>\r\n            {props.profile.fullName != null ? props.profile.fullName : null}\r\n        </div>\r\n\r\n        <ProfileAvatar IsMyPage={props.IsMyPage}\r\n                       photos={props.profile.photos}/>\r\n\r\n\r\n        <ProfileStatusF status={props.status}\r\n                        SetProfileStatus={props.SetProfileStatus}\r\n                        IsMyPage={props.IsMyPage}/>\r\n        {props.IsLogined &&\r\n            <SendMessageOnUserPage UserName={props.profile.fullName}\r\n                                   IsMyPage={props.IsMyPage}\r\n                                   UserID={props.profile.userId}\r\n                                   SendNewMessageThunk={props.SendNewMessageThunk}\r\n            />\r\n        }\r\n\r\n\r\n        {\r\n            ContactsIsEditing ?\r\n            <div>\r\n                <ProfileDataEditorFormRedux initialValues={props.profile}\r\n                                            contacts={props.profile.contacts}\r\n                                            onSubmit={PutNewProfileInfoToServer}\r\n                       ContactsEditingOFF={ContactsEditingOFF}/>\r\n            </div>\r\n            : <div>\r\n                <ProfileData profile={props.profile}\r\n                             IsMyPage={props.IsMyPage}\r\n                             ContactsEditingOn={ContactsEditingOn}/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\nconst ProfileDataEditorFormRedux = reduxForm({form: 'ProfileDataEditorForm'})(ProfileDataEditorForm)\r\nexport default UserInfo;","import React from 'react';\r\nimport pc from './Post.module.css'\r\nimport UserPhoto from \"../../../assetss/images/userPhoto.jpg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={pc.item}>\r\n            <img className={pc.img} src={(props.profile.photos.large && props.profile.photos.small) == null ? UserPhoto : props.profile.photos.large}/>\r\n            {props.message}\r\n            <div>\r\n                {props.likecount} <span>\r\n                    <img className={pc.like} src='https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Ei-like.svg/1024px-Ei-like.svg.png'/>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport pc from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, MaxLengthCreator} from \"../../utils/validators\";\r\nimport {TextArea} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\"\r\n\r\n\r\nconst maxValue250 = MaxLengthCreator(250)\r\n    const MyPostForm = (props) => {\r\n\r\n        return <div>\r\n            {props.IsMyPage &&\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={'postArea'}\r\n                           placeholder={\"type any info here\"}\r\n                           component={TextArea}\r\n                           validate={[required, maxValue250]}/>\r\n\r\n                </div>\r\n\r\n                <div>\r\n                    <button className={pc.button}> Send post</button>\r\n                </div>\r\n\r\n            </form>\r\n            }\r\n        </div>\r\n    }\r\n\r\nconst ReduxMyPostForm = reduxForm({form: 'mypost'})(MyPostForm )\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    const SendPost = (formDatas) => {\r\n        props.addpost(formDatas.postArea)\r\n\r\n    }\r\n\r\n    let Posts = props.posts.map(p => <Post message={p.Post} likecount={p.likesCount} profile={props.profile}/>);\r\n\r\n    return (\r\n        <div className={pc.pp}>\r\n            {props.IsMyPage ?  <h3>My posts</h3> :  <h3>Posts</h3>}\r\n            {<ReduxMyPostForm onSubmit={SendPost} {...props}/>}\r\n            <div className={pc.marginPost}>\r\n                {Posts}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default MyPosts","import React from 'react';\r\nimport {addpost} from \"../../../data/ProfileReduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {GetIsMyPageSelector, GetPostsSelector} from \"../../../data/ProfileSelectors\";\r\n\r\n\r\nclass MyPostsConteiner extends React.PureComponent {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MyPosts posts={this.props.posts}\r\n                     addpost={this.props.addpost}\r\n                     profile={this.props.profile}\r\n                     IsMyPage={this.props.IsMyPage}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet StateProps = (state) => ({\r\n    posts: GetPostsSelector(state),\r\n    IsMyPage: GetIsMyPageSelector(state)\r\n})\r\n\r\nexport default connect(StateProps, {addpost})(MyPostsConteiner)\r\n","import React from 'react';\r\nimport UserInfo from \"./UserInfo/UserInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsConteiner\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <UserInfo profile={props.profile}\r\n                  status={props.status}\r\n                  SetProfileStatus={props.SetProfileStatus}\r\n                  IsMyPage={props.IsMyPage}\r\n                  SetProfilePhoto={props.SetProfilePhoto}\r\n                  SaveProfileData={props.SaveProfileData}\r\n                  SendNewMessageThunk={props.SendNewMessageThunk}\r\n                  IsLogined={props.IsLogined}\r\n                  />\r\n        <MyPostsContainer  profile={props.profile} />\r\n    </div>\r\n\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport {GetProfileThunk,\r\n    GetProfileStatusThunk,\r\n    SetProfileStatusThunk,\r\n    SetProfilePhotoThunk,\r\n    SetIsMyPage,UpdateProfileInfoThunk}\r\n    from '../../data/ProfileReduser'\r\nimport {compose} from \"redux\";\r\nimport { GetIsMyPageSelector,\r\n    GetProfileSelector, GetStatusSelector} from \"../../data/ProfileSelectors\";\r\nimport {GetIsLoginedSelector, GetUserIDSelector} from \"../../data/AuthSelectors\";\r\nimport {SendNewMessageThunk} from \"../../data/DIalogsReduser\"\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    ProfileDataToPaint(){\r\n        let ProfileID = this.props.match.params.userID\r\n        if(!ProfileID){\r\n            ProfileID = this.props.userID\r\n            this.props.SetIsMyPage(true) //  if this branch is going so we are in own page\r\n            if(!ProfileID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        else{\r\n            this.props.SetIsMyPage(false) // if this branch is going so we are in some user page\r\n        }\r\n        this.props.GetProfileThunk(ProfileID)\r\n        this.props.GetProfileStatusThunk(ProfileID)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ProfileDataToPaint()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(this.props.match.params.userID !== prevProps.match.params.userID ){\r\n            this.ProfileDataToPaint()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile  profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     SetProfileStatus={this.props.SetProfileStatusThunk}\r\n                      SetProfilePhoto={this.props.SetProfilePhotoThunk}\r\n                      IsMyPage={this.props.IsMyPage}\r\n                      SaveProfileData={this.props.UpdateProfileInfoThunk}\r\n                      SendNewMessageThunk={this.props.SendNewMessageThunk}\r\n                      IsLogined={this.props.IsLogined}\r\n                        />\r\n        )\r\n    }\r\n}\r\n\r\nlet MapStateToProps = (state) => ({\r\n    profile: GetProfileSelector(state),\r\n    status : GetStatusSelector(state),\r\n    userID : GetUserIDSelector(state),\r\n    IsMyPage : GetIsMyPageSelector(state),\r\n    IsLogined : GetIsLoginedSelector(state)})\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {GetProfileThunk,GetProfileStatusThunk,\r\n        SetProfileStatusThunk,SetProfilePhotoThunk,SetIsMyPage,\r\n        UpdateProfileInfoThunk,SendNewMessageThunk}),\r\n    withRouter)(ProfileContainer)","import React from \"react\"\r\nimport ms from \"./Messages.module.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseButton from \"../../assetss/images/closeButton.png\"\r\n\r\n\r\nconst DeleteConfirmWindow = (props) => {\r\n    const closeWindow = () => {\r\n        props.SetToConfirmDeleting(false)\r\n    }\r\n\r\n    return <div>\r\n\r\n        <Dialog\r\n            className={ms.confirmDeletingWindow} open={props.ToConfirmDeleting}>\r\n\r\n            <div className={ms.wrapper}>\r\n                <img onClick={closeWindow} className={ms.imgClose} src={CloseButton}/>\r\n                <h3 className={ms.confirmDeletingWindowHeader}>\r\n                    Delete messages confirm\r\n                </h3>\r\n                <div className={ms.confirmDeletingWindowText}>\r\n                    Are you sure about this? you will can't restored this message.\r\n                    You will delete message only for your own\r\n                </div>\r\n                <div className={ms.confirmDeletingWindowButtons}>\r\n                    <button className={ms.deleteMessageStyle} onClick={props.deleteMessage}>\r\n                        yes\r\n                    </button>\r\n                    <span className={ms.buttontsDelta}>\r\n                       <button className={ms.deleteMessageStyle} onClick={closeWindow}>\r\n                           no\r\n                       </button>\r\n                </span>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Dialog>\r\n\r\n    </div>\r\n\r\n}\r\nexport default DeleteConfirmWindow","import React,{useState} from \"react\"\r\nimport d from \"../Dialogs.module.css\";\r\nimport DeleteConfirmWindow from \"./DeleteConfirmWindow\";\r\nimport ToTrash from \"../../assetss/images/trash.png\"\r\n\r\nconst DeleteMessage = (props) =>{\r\nlet [ToConfirmDeleting,SetToConfirmDeleting]=useState(false)\r\nlet [MessageToRestore,SetMessageToRestore]=useState(false)\r\n\r\nconst deleteMessage = () =>{\r\n    props.DeleteMessageThunk(props.MessageID,props.DialoguserID)\r\n    SetMessageToRestore(true)\r\n    SetToConfirmDeleting(false)\r\n}\r\n\r\n\r\n\r\n    return <div className={d.ConfirmText}>\r\n        {!ToConfirmDeleting && !MessageToRestore ?\r\n            <img src={ToTrash} className={d.ToTrash} onClick={()=>{\r\n                SetToConfirmDeleting(true)}\r\n            }/>\r\n\r\n            :null\r\n        }\r\n\r\n        {MessageToRestore &&\r\n            <button className={d.deleteMessageStyle} onClick={()=>{\r\n                SetMessageToRestore(false)\r\n                SetToConfirmDeleting(false)\r\n            }}>\r\n                restore message\r\n            </button>\r\n        }\r\n\r\n\r\n            <DeleteConfirmWindow\r\n                SetToConfirmDeleting={SetToConfirmDeleting}\r\n                ToConfirmDeleting={ToConfirmDeleting}\r\n                deleteMessage={deleteMessage}\r\n\r\n            />\r\n\r\n        </div>\r\n\r\n}\r\n\r\nexport default DeleteMessage","import React, {useEffect,useState} from \"react\"\r\nimport Preloader from \"../../assetss/common/Loader/Loader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport mwuStyles from \"./Messages.module.css\"\r\nimport UserPhoto from \"../../assetss/images/userPhoto.jpg\";\r\nimport Viewed from \"../../assetss/images/viewed1.jpg\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport d from \"../Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextAreaDialogsMessage} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport Paginator from \"../../assetss/common/Paginator/Paginator\";\r\nimport DeleteMessage from \"./DeleteMessage\";\r\n\r\n\r\n\r\nconst maxValue300 = MaxLengthCreator(300)\r\n\r\n\r\nconst MessageWithUserForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div >\r\n\r\n                <div className={d.messages}>\r\n                    <div>\r\n                        <div>\r\n                            <Field name={\"MessageTextArea\"}\r\n                                   component={TextAreaDialogsMessage}\r\n                                   placeholder={\"Enter your message here\"}\r\n                                   validate={[required, maxValue300]}/>\r\n                        </div>\r\n                        <div>\r\n                            <button className={d.button}> send message</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessageWithUserForm = reduxForm({form: 'messages'})(MessageWithUserForm)\r\n\r\n\r\nconst MessagesWithUser = (props) => {\r\n\r\n    const SendNewMessage = (Formdata) => {\r\n        props.SendNewMessageThunk(props.DialoguserID, Formdata.MessageTextArea)\r\n    }\r\n\r\n    let [MessagesData, SetMessagesData] = useState(props.MessagesData)\r\n\r\n\r\n    useEffect(() => {\r\n        SetMessagesData(props.MessagesData)\r\n        }, [props.MessagesData]\r\n    )\r\n\r\n    return <div>\r\n        {MessagesData.DialogsMessages  ?\r\n            MessagesData.DialogsMessages.items.map(item => {\r\n                return (\r\n                    <div  className={mwuStyles.fontStyles} key={item.id} >\r\n                        <div className={mwuStyles.dateStyle}>\r\n                            Sended at : &nbsp;&nbsp;\r\n                            {item.addedAt.split(\"T\")[0]}\r\n                        </div>\r\n\r\n\r\n                        <div className={mwuStyles.MessageFormStyle}>\r\n                            <div>\r\n\r\n                                {item.senderName}  &nbsp;&nbsp;\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[0]}:\r\n                                {item.addedAt.split(\"T\")[1].split(\".\")[0].split(\":\")[1]}\r\n                            </div>\r\n\r\n\r\n\r\n                            <NavLink to={`/Profile/${item.senderId}`}>\r\n                                {item.senderId !== props.MyID ?\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.InterlocutorAvatar != null\r\n                                             ? props.MessagesData.InterlocutorAvatar\r\n                                             : UserPhoto}/>\r\n                                    :\r\n                                    <img className={mwuStyles.img}\r\n                                         src={props.MessagesData.UserAvatar!= null ?\r\n                                             props.MessagesData.UserAvatar\r\n                                             : UserPhoto}/>\r\n                                }\r\n                            </NavLink>\r\n\r\n                            <div className={mwuStyles.messageText}>\r\n                                &nbsp;&nbsp;  {item.body}\r\n                            </div>\r\n                            <DeleteMessage DialoguserID={props.DialoguserID}\r\n                                           MessageID={item.id}\r\n                                           DeleteMessageThunk={props.DeleteMessageThunk}\r\n                            />\r\n                            <div>\r\n                                {item.viewed &&\r\n                                <img src={Viewed} className={mwuStyles.viewed}/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n            : <Preloader/>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        {props.MessagesData.DialogsMessages ?\r\n            <>\r\n                <ReduxMessageWithUserForm onSubmit={SendNewMessage} {...props} />\r\n            {/*<Paginator OnChangedPage={props.OnChangedPage}\r\n                       currentPage={props.currentPage}\r\n                       totalUsersCount={props.MessagesData.DialogsMessages.totalCount}\r\n                       pageSize={props.pageSize}\r\n                       PortionSize={props.PortionSize}\r\n            />*/}\r\n            </>\r\n            : <Preloader/>\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default MessagesWithUser","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {\r\n    GetMessagesDataSelector,\r\n} from \"../../../data/DialogsSelectors\";\r\nimport MessagesWithUser from \"./MessagesWithUser\";\r\nimport {AuthRedirect} from \"../../hocs/AuthRedirect\";\r\nimport {\r\n    SendNewMessageThunk, GetNewMessagesThunk,\r\n    GetInterlocutorAvatarThunk, setUserAvatarForDialogs,GetProfileAvatarThunk,DeleteMessageThunk\r\n} from \"../../../data/DIalogsReduser\"\r\nimport {GetUserIDSelector} from \"../../../data/AuthSelectors\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const DialoguserID = this.props.match.params.userID\r\n        this.props.GetNewMessagesThunk(DialoguserID)\r\n        this.props.GetInterlocutorAvatarThunk(DialoguserID)\r\n        this.props.GetProfileAvatarThunk(this.props.MyID)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MessagesWithUser {...this.props} DialoguserID={this.props.match.params.userID}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n    MessagesData: GetMessagesDataSelector(state),\r\n    MyID: GetUserIDSelector(state)\r\n})\r\n\r\nexport default  compose(connect(StateToProps,\r\n    {\r\n        GetNewMessagesThunk, SendNewMessageThunk,\r\n        GetInterlocutorAvatarThunk, setUserAvatarForDialogs, GetProfileAvatarThunk,DeleteMessageThunk\r\n    }),\r\n    AuthRedirect,\r\n    withRouter)(MessagesContainer)","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {LoginThunk} from \"../../data/AuthReducer\"\r\nimport {required, MaxLengthCreator} from \"../utils/validators\"\r\nimport {CreateField, Input, InputName} from \"../assetss/common/ValidatorsComponents/ElementsValidators\"\r\nimport lm from \"../Login/login.module.css\"\r\nimport LoginUserPhoto from \"../assetss/images/userLog.jpg\"\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength50 = MaxLengthCreator(50)\r\n\r\nconst MapStateToProps = (state) => ({\r\n    IsLogined: state.Auth.IsLogined,\r\n    CaptchaUrl: state.Auth.CaptchaUrl\r\n})\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={lm.login}>\r\n            <form onSubmit={props.handleSubmit}>\r\n\r\n                <div>\r\n                    <img src={LoginUserPhoto} className={lm.imgUser}/>\r\n                    {CreateField(\"Enter the email\", \"email\", [required, maxLength50], Input)}\r\n                </div>\r\n\r\n                <div>\r\n                    {CreateField(\"Enter the password\", \"password\", [required, maxLength50],\r\n                        Input, {type: \"password\"})}\r\n                </div>\r\n\r\n                <div className={lm.rememberMe}>\r\n                    {CreateField(\"\", \"rememberMe\", [], \"input\", {type: \"checkbox\"},\r\n                        \"remember me\")}\r\n                </div>\r\n\r\n                {props.CaptchaUrl &&\r\n                <div>\r\n                    <img src={props.CaptchaUrl}/>\r\n                    {CreateField(\"Enter captcha symbols\", \"captcha\", [required],\r\n                        InputName)}\r\n                </div>\r\n                }\r\n                {props.error\r\n                    ?\r\n                    <div className={lm.AuthError}>\r\n                        {props.error}\r\n                    </div>\r\n                    : null}\r\n                <div>\r\n                    <button className={lm.button}> Enter</button>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nlet Login = (props) => {\r\n    const PostUserDataToServer = (formDatas) => {\r\n        props.LoginThunk(formDatas.email, formDatas.password, formDatas.rememberMe)\r\n        //here is all datas of forms, we can do here use some thunk for a make request on server\r\n    }\r\n\r\n    if (props.IsLogined) {\r\n        return <Redirect to={\"/Profile\"}/>\r\n    }\r\n    return (<div>\r\n\r\n        <ReduxLoginForm onSubmit={PostUserDataToServer}\r\n                        CaptchaUrl={props.CaptchaUrl}/>\r\n    </div>)\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, {LoginThunk}),\r\n)(Login)","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Login from \"../../Login/Login\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst LoginModalWindow = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\n\r\nexport default function CustomizedDialogs() {\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button  variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\r\n                authorise\r\n            </Button>\r\n            <Dialog   onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    Authentication windows\r\n                </DialogTitle>\r\n                <LoginModalWindow dividers>\r\n                <Login/>\r\n                </LoginModalWindow>\r\n\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\nimport LoginModalWindow from \"../MaterialUI/ModalWindow/LoginModal\"\r\nimport lm from \"../Login/login.module.css\"\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    return <div className={lm.LoginPageAlarm}>\r\n        <h1>\r\n            you need authorization for watching this\r\n        </h1>\r\n        <div className={lm.AuthButton}>\r\n            <LoginModalWindow/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default LoginPage","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListIcon from '@material-ui/icons/ListAlt';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function InputWithIcon(props) {\r\n    const classes = useStyles();\r\n    return (\r\n            <div className={classes.margin}>\r\n                <Grid container spacing={1} alignItems=\"flex-end\">\r\n                    <Grid item>\r\n                        <ListIcon />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField onChange={props.OnTextFieldCreateNewToDoListChanging}\r\n                                   id=\"input-with-icon-grid\"\r\n                                   placeholder={\"Enter new list name\"} />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n    );\r\n}","import React,{useState} from \"react\"\r\nimport InputWithIcon from \"./TextFieldToDoLists\";\r\nimport TDlistS from \"./CreateNewToDoList.module.css\"\r\n\r\n\r\nconst CreateNewToDoList = (props) =>{\r\n    let[CreateNewToDoListMode,SetCreateNewToDoListMode] = useState(false);\r\n    let[CurrentValueOfCreateNewToDoListInput,SetCurrentValueOfCreateNewToDoListInput] = useState(\"\");\r\n\r\n    const OnTextFieldCreateNewToDoListChanging = (el) =>{\r\n     SetCurrentValueOfCreateNewToDoListInput(el.currentTarget.value)\r\n    }\r\n\r\n    const CreateToDoListON = () =>{\r\n        SetCreateNewToDoListMode(true)\r\n    };\r\n    const CreateToDoListOFF = () =>{\r\n        SetCreateNewToDoListMode(false)\r\n    }\r\n\r\n    const AddNewToDoList = () => {\r\n        if (CurrentValueOfCreateNewToDoListInput.length > 0 && CurrentValueOfCreateNewToDoListInput.length < 100) {\r\n            props.AddNewToDoListsThunk(CurrentValueOfCreateNewToDoListInput)\r\n            SetCreateNewToDoListMode(false)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return <div>\r\n        {!CreateNewToDoListMode &&\r\n            <div   className={TDlistS.CreateAndGoBackButtons}>\r\n                <button className={TDlistS.AddNewListButton} onClick={CreateToDoListON}>\r\n                    ADD NEW LIST\r\n                </button>\r\n            </div>\r\n\r\n        }\r\n\r\n        { CreateNewToDoListMode &&\r\n            <>\r\n                <div className={TDlistS.CreateAndGoBackButtons}>\r\n                    <button className={TDlistS.GoBacktButton} onClick={CreateToDoListOFF}>\r\n                       GO BACK\r\n                    </button>\r\n                </div>\r\n                <div className={TDlistS.AddNewListWrapper} >\r\n                    <InputWithIcon OnTextFieldCreateNewToDoListChanging={OnTextFieldCreateNewToDoListChanging} />\r\n                    <button onClick={AddNewToDoList} className={TDlistS.Addbutton} > add </button>\r\n                </div>\r\n        </>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default CreateNewToDoList","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst DeleteToDoListButton =(props) =>{\r\n    const classes = useStyles();\r\n\r\n    const DeleteList = () =>{\r\n        props.Del(props.ListID)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                disabled={props.ShowTasksMode}\r\n                onClick={DeleteList}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<DeleteIcon />}\r\n            >\r\n                Delete\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default DeleteToDoListButton","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n const EditButton =(props)=> {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Fab size={props.ButtonSize} color=\"secondary\" aria-label=\"edit\" >\r\n                <EditIcon onClick={props.HandleOnEdit} />\r\n            </Fab>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default EditButton","import React, {useState} from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListMenuIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteToDoListButton from \"./DeleteToDoList\";\r\nimport EditButton from \"./EditButton\";\r\nimport TDLS from \"./ToDoLists.module.css\"\r\n\r\nconst ToDoListMenuIcon = (props) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const menuId = 'todo_list_menu_id';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <div className={TDLS.EditButtonPostition}>\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <EditButton HandleOnEdit={props.EditTitleModeON}\r\n                            ButtonSize={\"small\"}/>\r\n            </MenuItem>\r\n            </div>\r\n            <MenuItem >\r\n                <DeleteToDoListButton ListID={props.ListID}\r\n                                      Del={props.Del}\r\n                                      ShowTasksMode={props.ShowTasksMode}/>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return <div>\r\n        <IconButton\r\n            edge=\"end\"\r\n            size=\"medium\"\r\n            aria-label=\"ToDo list menu\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleProfileMenuOpen}\r\n            color=\"primary\"\r\n        >\r\n            <ListMenuIcon />\r\n        </IconButton>\r\n        {renderMenu}\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default ToDoListMenuIcon;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst  SaveButton = (props)=> {\r\n    const classes = useStyles();\r\n\r\nconst SaveNewToDoListTitle = ()=>{\r\n    if(props.CurrentToDoListTitle.length !== 0 && props.CurrentToDoListTitle.length < 100 ) {\r\n        props.ChangeToDoListTitleThunk(props.ListID, props.CurrentToDoListTitle)\r\n        props.EditTitleModeOFF()\r\n    }\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={SaveNewToDoListTitle}\r\n                size=\"small\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n            >\r\n                Save\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default SaveButton","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport GoBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\nconst GoBackButton = (props)=> {\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"small\"\r\n                startIcon={<GoBackIcon  />}\r\n            >\r\n                Back\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default GoBackButton","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst TitleChangingField = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    onChange={props.OnToDoListTitleChanging}\r\n                    id=\"ToDoListChangingField\"\r\n                    value={props.CurrentToDoListTitle}\r\n                    className={classes.textField}\r\n                    helperText=\"maximum 100 symbols\"\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default TitleChangingField","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst  AddNewTaskButton = (props)=> {\r\n    const classes = useStyles();\r\n\r\n    const AddNewTask = ()=>{\r\n        if(props.AddNewTaskFieldCurrentValue.length >0 && props.AddNewTaskFieldCurrentValue.length <100) {\r\n            props.AddNewTaskThunk(props.ListID, props.AddNewTaskFieldCurrentValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={AddNewTask}\r\n                size=\"small\"\r\n                className={classes.button}\r\n            >\r\n                add task\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default AddNewTaskButton","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 600,\r\n    },\r\n}));\r\n\r\nconst AddTaskField = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    onChange={props.OnAddNewTaskFieldChange}\r\n                    id=\"AddTaskFieldID\"\r\n                    className={classes.textField}\r\n                    placeholder=\"Enter new task title\"\r\n                    helperText=\"maximum 100 symbols\"\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default AddTaskField","import React,{useState} from \"react\"\r\nimport TDLS from \"../ToDoLists.module.css\";\r\nimport AddNewTaskButton from \"./AddNewTaskButton\";\r\nimport AddTaskField from \"./AddNewTaskField\";\r\n\r\n\r\nconst AddNewTask = (props) => {\r\n    let [AddNewTaskFieldCurrentValue,SetAddNewTaskFieldCurrentValue] = useState(\"\")\r\n\r\n    const OnAddNewTaskFieldChange = (el)=>{\r\n        SetAddNewTaskFieldCurrentValue(el.currentTarget.value)\r\n    }\r\n   return  <div className={TDLS.AddNewTaskWrapper}>\r\n            <div >\r\n                <AddTaskField OnAddNewTaskFieldChange={OnAddNewTaskFieldChange}/>\r\n            </div>\r\n\r\n            <div className={TDLS.AddTaskButton}>\r\n                <AddNewTaskButton ListID={props.ListID}\r\n                                  AddNewTaskThunk={props.AddNewTaskThunk}\r\n                                  AddNewTaskFieldCurrentValue={AddNewTaskFieldCurrentValue}\r\n                />\r\n            </div>\r\n\r\n    </div>\r\n}\r\nexport default AddNewTask","import React from 'react';\r\nimport ShowIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\n\r\n\r\nconst  ShowTasksButton = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Fab disabled={props.ButtonIsDesabled} onClick={props.HandleOnClick}  size=\"small\" color=\"primary\" aria-label=\"edit\" >\r\n                <ShowIcon/>\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\nexport default ShowTasksButton","import React from 'react';\r\nimport HideIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\n\r\n\r\nconst  HideTasksButton = (props)=> {\r\n    return (\r\n        <div>\r\n            <Fab  onClick={props.HandleOnClick} size=\"small\" color=\"primary\" aria-label=\"edit\" >\r\n                <HideIcon  />\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\nexport default HideTasksButton","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst DeleteButton = (props)=> {\r\n\r\n    const DeleteTask = ()=>{\r\n        props.DeleteTaskThunk(props.ListID,props.TaskID)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Button\r\n                disabled={props.ShowButtonBlocked}\r\n                variant=\"text\"\r\n                color=\"inherit\"\r\n                onClick={DeleteTask}\r\n                size=\"large\"\r\n                startIcon={<DeleteIcon />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default DeleteButton","import React from 'react';\r\nimport Done from '@material-ui/icons/Done';\r\n\r\nconst TaskDoneIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Done color=\"secondary\"  />\r\n        </div>\r\n    );\r\n}\r\nexport default TaskDoneIcon","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditButton from '@material-ui/icons/Edit';\r\n\r\nconst EditTaskButton = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<EditButton />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default EditTaskButton","import React from 'react';\r\nimport DetailsIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst TaskShowDetailsIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                disabled={props.ShowButtonBlocked}\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<DetailsIcon />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default TaskShowDetailsIcon","import React from 'react';\r\nimport DetailsIconUP from '@material-ui/icons/KeyboardArrowUp';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst TaskHideDetailsIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={props.HandleOnClick}\r\n                size=\"large\"\r\n                startIcon={<DetailsIconUP />}\r\n            >\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default TaskHideDetailsIcon","import React,{useState} from \"react\"\r\nimport ts from \"./Tasks.module.css\";\r\nimport TaskShowDetailsIcon from \"./TaskShowDetailsIcon\";\r\nimport TaskHideDetailsIcon from \"./TaskHideDetails\";\r\n\r\n\r\n\r\n\r\nconst TaskDetails = (props) => {\r\n\r\n    let [ShowDetails, SetShowDetails] = useState(false)\r\n\r\nconst DateTransform = (date) =>{\r\n        if(date ) {\r\n            return date.split(\"T\")[0].split().join().split(\"-\").reverse()\r\n        }\r\n    }\r\n    let AddedDate = DateTransform(props.startDate)\r\n    let DeadLineDate = DateTransform(props.deadline)\r\n\r\n    const ShowDetailsON = () => {\r\n        SetShowDetails(true)\r\n        props.ShowButtonBlockedON()\r\n    }\r\n\r\n    const ShowDetailsOFF = () => {\r\n        SetShowDetails(false)\r\n        props.ShowButtonBlockedOFF()\r\n    }\r\n    return <div >\r\n\r\n        {ShowDetails ?\r\n            <div>\r\n            <div className={ts.detailsWrapper}>\r\n\r\n                <div className={ts.startDate}>\r\n                    {props.startDate ?\r\n                        \"start date :\" + AddedDate[0]+\"/\"+AddedDate[1]+\"/\"+AddedDate[2]\r\n                        : \"no started date data\"\r\n                    }\r\n                </div>\r\n\r\n                <div className={ts.deadline}>\r\n\r\n                    {props.deadline ?\r\n                        \"deadline :\"  + DeadLineDate[0]+\"/\"+DeadLineDate[1]+\"/\"+DeadLineDate[2]\r\n                        : \"no deadline data\"\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n                <div className={ts.description}>\r\n                    description :\r\n                    <div className={ts.descriptionText}>\r\n                        {props.description?\r\n                        props.description:\r\n                        \"no description data\"}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={ts.DetailsButton}>\r\n                    <TaskHideDetailsIcon HandleOnClick={ShowDetailsOFF} />\r\n                </div>\r\n            </div>\r\n            :\r\n\r\n            <div className={ts.DetailsButton}>\r\n                <TaskShowDetailsIcon ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                     HandleOnClick={ShowDetailsON}/>\r\n            </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default TaskDetails","import React from 'react';\r\nimport NotDone from '@material-ui/icons/Clear';\r\n\r\nconst NotDoneIcon = (props)=> {\r\n\r\n    return (\r\n        <div>\r\n            <NotDone color=\"secondary\"  />\r\n        </div>\r\n    );\r\n}\r\nexport default NotDoneIcon","import React from \"react\"\r\nimport {\r\n    Input,\r\n    CreateField,\r\n    TaskFormInput,ContactFormInput\r\n} from \"../../assetss/common/ValidatorsComponents/ElementsValidators\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators\";\r\nimport ts from \"./Tasks.module.css\";\r\nimport GoBackButton from \"../GoBackButton\";\r\n\r\n\r\n\r\nconst TaskEditForm = (props) => {\r\n\r\n    return <div>\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={ts.TaskFormWrapper}>\r\n\r\n                <div className={ts.TaskEditFromButtons}>\r\n\r\n                        <button className={ts.TaskFormSaveButton}>\r\n                            save\r\n                        </button>\r\n\r\n                    <div className={ts.GoBackButton}>\r\n                    <GoBackButton HandleOnClick={props.TaskEditModeOFF}/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <div className={props.TaskExecutedStyleForWindow}>\r\n                        <div className={ts.MainFormWrapper}>\r\n\r\n                            <div>\r\n                                <div>\r\n                                    Completed?\r\n                                </div>\r\n\r\n                                <div className={ts.CompletedInput}>\r\n                                    {CreateField(\"completed\", \"completed\", [], ContactFormInput, {type: \"checkbox\"})}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={ts.Title}>\r\n                                Task title :\r\n                                {CreateField(\"title\", \"title\", [], ContactFormInput)}\r\n                            </div>\r\n                        </div>\r\n\r\n                            <div className={ts.detailsWrapper}>\r\n                                <div className={ts.startDate}>\r\n                                    Start date :\r\n                                    {CreateField(\"start date\", \"startDate\", [], ContactFormInput)}\r\n                                </div>\r\n\r\n                                <div className={ts.deadline}>\r\n                                    deadline :\r\n                                    {CreateField(\"deadline\", \"deadline\", [], ContactFormInput)}\r\n                                </div>\r\n                            </div>\r\n                            <div className={ts.FormDescription}>\r\n                                description :\r\n                                {CreateField(\"description\", \"description\", [], ContactFormInput)}\r\n                            </div>\r\n\r\n                        <div className={ts.detailsWrapper}>\r\n                            <div className={ts.priority}>\r\n                                priority :\r\n                                {CreateField(\"priority\", \"priority\", [], ContactFormInput)}\r\n                            </div>\r\n\r\n                            <div>\r\n                                status :\r\n                                {CreateField(\"status\", \"status\", [], ContactFormInput)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default TaskEditForm","import React, {useState,useEffect} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport classNames from 'classnames';\r\nimport DeleteButton from \"./DeleteTaskButton\";\r\nimport TaskDoneIcon from \"./DoneIcone\";\r\nimport EditTaskButton from \"./EditTaskButton\";\r\nimport TaskDetails from \"./TaskDetails\";\r\nimport NotDoneIcon from \"./NotDoneIcon\";\r\nimport TaskEditForm from \"./TaskEditForm\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport EVS from \"../../assetss/common/ValidatorsComponents/ElementsValidators.module.css\";\r\n\r\n\r\n\r\nconst Task = (props) => {\r\n\r\n    let [TaskEditMode, SetTaskEditMode] = useState(false)\r\n    let [status, SetStatus] = useState({\r\n        title : props.CurrentTask.title,\r\n        description : props.CurrentTask.description,\r\n        completed : props.CurrentTask.completed,\r\n        status : props.CurrentTask.status,\r\n        priority : props.CurrentTask.priority,\r\n        startDate : props.CurrentTask.startDate,\r\n        deadline : props.CurrentTask.deadline\r\n    })\r\n\r\n\r\n    const TaskEditModeON = () => {\r\n        SetTaskEditMode(true)\r\n    }\r\n    const TaskEditModeOFF = () => {\r\n        SetTaskEditMode(false)\r\n    }\r\n    const TaskExecutedStyleForWindow = classNames({\r\n        [ts.Ramka] : !props.completed,\r\n        [ts.DoneRamka] : props.completed\r\n    })\r\n\r\n    const SaveNewToDoListTaskInfo= (formData)=>{\r\n        console.log(formData)\r\n        props.UpdateTaskInformationThunk(props.ListID,props.TaskID,formData)\r\n        TaskEditModeOFF()\r\n\r\n    }\r\n\r\n    return <div>\r\n        {  /*  props.ToDoListTasks.map(el => el.ListId === props.ListID && el.TaskData.items.map(key =>{\r\n                  return <div key={key.id}>\r\n                      {key.title}\r\n                  </div>\r\n                  })\r\n              )*/\r\n\r\n\r\n            !TaskEditMode ?\r\n            <div  className={ts.Main}>\r\n\r\n                <div className={classNames(ts.MainWrapper)}>\r\n\r\n                    <div className={ts.TaskEditButton}>\r\n                        <EditTaskButton ButtonSize={\"small\"} HandleOnClick={TaskEditModeON}/>\r\n                    </div>\r\n\r\n                    <div className={TaskExecutedStyleForWindow}>\r\n                        <div className={ts.TaskBodyWrapper}>\r\n                            {props.completed ?\r\n                                <div className={ts.iconStatus}>\r\n                                    <TaskDoneIcon/>\r\n                                </div>\r\n                                :\r\n                                <div className={ts.iconStatus}>\r\n                                    <NotDoneIcon/>\r\n                                </div>\r\n                            }\r\n\r\n\r\n                            <div className={ts.Title}>\r\n                                {props.TaskTitle}\r\n                            </div>\r\n\r\n\r\n                            <div className={ts.ToTrashIcon}>\r\n                                <DeleteButton DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                              ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                              ListID={props.ListID} TaskID={props.TaskID}/>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <TaskDetails\r\n                                startDate={props.startDate}\r\n                                deadline={props.TaskDeadline}\r\n                                description={props.TaskDescription}\r\n                                ShowButtonBlocked={props.ShowButtonBlocked}\r\n                                ShowButtonBlockedON={props.ShowButtonBlockedON}\r\n                                ShowButtonBlockedOFF={props.ShowButtonBlockedOFF}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n                :\r\n                <div>\r\n                    <TaskEditFormRedux CurrentTask={props.CurrentTask}\r\n                                       initialValues={status}\r\n                                       TaskEditModeOFF={TaskEditModeOFF}\r\n                                       ListID={props.ListID}\r\n                                       TaskID={props.TaskID}\r\n                                       onSubmit={SaveNewToDoListTaskInfo}\r\n                                       TaskExecutedStyleForWindow={TaskExecutedStyleForWindow}\r\n                    />\r\n                </div>\r\n        }\r\n\r\n    </div>\r\n}\r\nconst TaskEditFormRedux = reduxForm({form: 'TaskEditorForm'})(TaskEditForm)\r\n\r\nexport default Task","import React, {useState, useEffect} from \"react\"\r\nimport ts from \"./Tasks.module.css\"\r\nimport Task from \"./Task\";\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n    let [TasksData, SetTasksData] = useState(props.ToDoListTasks.items)\r\n    let [ShowButtonBlocked, SetShowButtonBlocked] = useState(false)\r\n\r\n\r\n    const ShowButtonBlockedON = () => {\r\n        SetShowButtonBlocked(true)\r\n    }\r\n\r\n    const ShowButtonBlockedOFF = () => {\r\n        SetShowButtonBlocked(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n            SetTasksData(props.ToDoListTasks.items)\r\n        }, [props.ToDoListTasks.items]\r\n    )\r\n\r\n\r\n\r\n    return <div>\r\n        {\r\n\r\n\r\n            TasksData.map(task => {\r\n\r\n                return <div key={task.id} className={ts.Main}>\r\n\r\n                    <Task completed={task.completed}\r\n                          UpdateTaskInformationThunk={props.UpdateTaskInformationThunk}\r\n                          CurrentTask={task}\r\n                          TaskTitle={task.title}\r\n                          ShowButtonBlocked={ShowButtonBlocked}\r\n                          ListID={task.todoListId}\r\n                          TaskID={task.id}\r\n                          DeleteTaskThunk={props.DeleteTaskThunk}\r\n                          TaskAddedDate={task.addedDate}\r\n                          TaskDeadline={task.deadline}\r\n                          TaskDescription={task.description}\r\n                          ShowButtonBlockedON={ShowButtonBlockedON}\r\n                          ShowButtonBlockedOFF={ShowButtonBlockedOFF}\r\n                    />\r\n\r\n                </div>\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Tasks","import React, {useState, useEffect} from \"react\"\r\nimport TDLS from \"./ToDoLists.module.css\";\r\nimport ToDoListMenuIcon from \"./ListMenu\";\r\nimport SaveButton from \"./SaveButton\";\r\nimport GoBackButton from \"./GoBackButton\";\r\nimport TitleChangingField from \"./TitleChangeField\";\r\nimport AddNewTask from \"./AddNewTask/AddNewTask\";\r\nimport ShowTasksButton from \"./ToDoListTasks/ShowTasksButton\";\r\nimport HideTasksButton from \"./ToDoListTasks/HideTasksButton\";\r\nimport Tasks from \"./ToDoListTasks/Tasks\";\r\nimport Preloader from \"../assetss/common/Loader/Loader\";\r\n\r\n\r\nconst ToDoList = (props) => {\r\n    let [EditTitleMode, SetEditTitleMode] = useState(false)\r\n    let [ShowTasksMode, SetShowTasksMode] = useState(false)\r\n    let [CurrentToDoListTitle, SetToDoListTitle] = useState(props.title)\r\n\r\n    const EditTitleModeON = () => {\r\n        SetEditTitleMode(true)\r\n    }\r\n    const EditTitleModeOFF = () => {\r\n        SetEditTitleMode(false)\r\n    }\r\n\r\n    const OnToDoListTitleChanging = (el) => {\r\n        SetToDoListTitle(el.currentTarget.value)\r\n    }\r\n\r\n    const ShowTask = () => {\r\n        props.GetToDoListTasksThunk(props.ListID, props.ToDoListTasksCount, props.ToDoListTasksPage)\r\n        SetShowTasksMode(true)\r\n        props.ButtonIsDesabledON()\r\n    }\r\n\r\n    const ShowTaskModeOFF = () => {\r\n        SetShowTasksMode(false)\r\n        props.ButtonIsDesabledOFF()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n            SetToDoListTitle(props.title)\r\n        }, [props.title]\r\n    )\r\n\r\n\r\n\r\n\r\n    return <div>\r\n        {!EditTitleMode ?\r\n            <div className={TDLS.ToDolistsWrapper}>\r\n\r\n                <ToDoListMenuIcon ListID={props.ListID}\r\n                                  ShowTasksMode={ShowTasksMode}\r\n                                  EditTitleModeON={EditTitleModeON}\r\n                                  Del={props.DeleteToDoListThunk}/>\r\n\r\n                <div className={TDLS.ToDoListTitle}>\r\n                    {props.title}\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n            <div className={TDLS.ToDolistsChanchingWrapper}>\r\n                <div>\r\n                    <SaveButton ListID={props.ListID} ChangeToDoListTitleThunk={props.ChangeToDoListTitleThunk}\r\n                                EditTitleModeOFF={EditTitleModeOFF} CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                    <GoBackButton HandleOnClick={EditTitleModeOFF}/>\r\n                </div>\r\n                <div className={TDLS.ToDoListChangingInput}>\r\n                    <TitleChangingField OnToDoListTitleChanging={OnToDoListTitleChanging}\r\n                                        CurrentToDoListTitle={CurrentToDoListTitle}/>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n\r\n        {ShowTasksMode ?\r\n\r\n            <div>\r\n\r\n                <AddNewTask ListID={props.ListID}\r\n                            AddNewTaskThunk={props.AddNewTaskThunk}\r\n                />\r\n\r\n                <div>\r\n                    {props.ToDoListTasks.items ?\r\n                        <div className={TDLS.tasksposititon}>\r\n                            <Tasks\r\n                                DeleteTaskThunk={props.DeleteTaskThunk}\r\n                                ToDoListTasks={props.ToDoListTasks}\r\n                                UpdateTaskInformationThunk={props.UpdateTaskInformationThunk}\r\n                            />\r\n                        </div>\r\n\r\n                        :\r\n                        <Preloader/>\r\n                    }\r\n\r\n\r\n                    <div className={TDLS.HideTasksButton}>\r\n                        <HideTasksButton HandleOnClick={ShowTaskModeOFF}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            :\r\n            <div className={TDLS.ShowTasksButton}>\r\n                <ShowTasksButton ShowTasksMode={ShowTasksMode}\r\n                                 HandleOnClick={ShowTask}\r\n                                 ButtonIsDesabled={props.ButtonIsDesabled}\r\n                />\r\n            </div>\r\n\r\n        }\r\n    </div>\r\n}\r\nexport default ToDoList","import React,{useState} from \"react\"\r\nimport CreateNewToDoList from \"./CreateNewToDoList/CreateNewToDoList\";\r\nimport TDLS from \"./ToDoLists.module.css\"\r\nimport ToDoList from \"./ToDoList\";\r\n\r\n\r\nconst ToDoLists = (props) => {\r\nlet [ButtonIsDesabled,SetButtonIsDesabled] = useState(false)\r\n\r\n    const ButtonIsDesabledON=()=>{\r\n        SetButtonIsDesabled(true)\r\n    }\r\n    const ButtonIsDesabledOFF=()=>{\r\n        SetButtonIsDesabled(false)\r\n    }\r\n    return <div>\r\n        <CreateNewToDoList AddNewToDoListsThunk={props.AddNewToDoListsThunk}\r\n                          />\r\n        {props.ToDoLists &&\r\n        props.ToDoLists.map(key => {\r\n            return <div className={TDLS.ToDoListsPosition} key={key.id}>\r\n\r\n                <ToDoList {...props}\r\n                          ListID={key.id}\r\n                          title={key.title}\r\n                          ButtonIsDesabled={ButtonIsDesabled}\r\n                          ButtonIsDesabledON={ButtonIsDesabledON}\r\n                          ButtonIsDesabledOFF={ButtonIsDesabledOFF}\r\n                />\r\n            </div>\r\n        })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ToDoLists","export const GetToDoLists = (state) =>{\r\n    return state.ToDoListsData.ToDoLists\r\n}\r\nexport const GetToDoListTasksPage = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasksPage\r\n}\r\nexport const GetToDoListTasksCount = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasksCount\r\n}\r\nexport const GetToDoListTasks = (state) =>{\r\n    return state.ToDoListsData.ToDoListTasks\r\n}\r\nexport const GetToDoListIsFetching = (state) =>{\r\n    return state.ToDoListsData.IsFetching\r\n}","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../hocs/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport ToDoLists from \"./ToDoLists\";\r\nimport {\r\n    GetToDoListIsFetching,\r\n    GetToDoLists,\r\n    GetToDoListTasks,\r\n    GetToDoListTasksCount,\r\n    GetToDoListTasksPage\r\n} from \"../../data/ToDoListsSelectors\";\r\nimport {\r\n    SetToDoListTasksPage, SetToDoListTasksCount, GetToDoListsThunk, AddNewToDoListsThunk,\r\n    DeleteToDoListThunk,ChangeToDoListTitleThunk,\r\n    GetToDoListTasksThunk,AddNewTaskThunk,DeleteTaskThunk,\r\n    UpdateTaskInformationThunk\r\n} from \"../../data/ToDoListsReducer\"\r\n\r\nclass ToDoListsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.GetToDoListsThunk();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ToDoLists {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet StateToProps = (state) => ({\r\n    ToDoLists: GetToDoLists(state),\r\n    ToDoListTasksPage: GetToDoListTasksPage(state),\r\n    ToDoListTasksCount: GetToDoListTasksCount(state),\r\n    ToDoListTasks : GetToDoListTasks(state),\r\n    IsFetching : GetToDoListIsFetching(state)\r\n})\r\n\r\nexport default compose(connect(StateToProps,\r\n    {\r\n        SetToDoListTasksPage, SetToDoListTasksCount,\r\n        GetToDoListsThunk, AddNewToDoListsThunk,\r\n        DeleteToDoListThunk,ChangeToDoListTitleThunk,\r\n        GetToDoListTasksThunk,AddNewTaskThunk,DeleteTaskThunk,\r\n        UpdateTaskInformationThunk\r\n    }),\r\n    AuthRedirect)(ToDoListsContainer)","import React, {Component} from 'react';\nimport './App.css';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {Redirect, Route, withRouter} from \"react-router-dom\";\n/*import News from \"./components/News/News\";*/\n/*import Music from \"./components/Music/Music\";*/\n/*import Settings from \"./components/Settings/Settings\";*/\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileCOntainer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {InitializationAPPthunk} from \"./data/InitializatonReducer\";\nimport Preloader from \"./components/assetss/common/Loader/Loader\";\n// import {WithSuspense} from \"./components/hocs/WithSuspense\";\nimport MessagesContainer from \"./components/Dialogs/Message/MessagesContainer\";\nimport {GetinitionSelector} from \"./data/InitialozationSelectors\";\nimport {GetNewMessagesCountThunk} from \"./data/DIalogsReduser\";\nimport LoginPage from \"./components/Login/LoginPage\";\nimport ToDoListsContainer from \"./components/ToDoLists/ToDoListsContainer\";\nimport {GetIsLoginedSelector} from \"./data/AuthSelectors\";\n\n/*const Music = React.lazy(() => import('./components/Music/Music'))*/\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.InitializationAPPthunk()\n    }\n\n    render() {\n\n        if (!this.props.inition) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className='wrapper'>\n                    <HeaderContainer  />\n\n\n                <div className=\"app-wrapper-content\">\n\n                    <Route exact path='/'\n                           render={() => <Redirect to={\"Profile/\"}/>}/>\n\n                    <Route path='/dialogs/'\n                           render={() => <DialogsContainer/>}/>\n                    <Route path='/messages/:userID?'\n                           render={() => <MessagesContainer/>}/>\n\n                    <Route path='/Profile/:userID?'\n                           render={() => <ProfileContainer/>}/>\n\n\n                    <Route exact path='/Users' render={() => <UsersContainer/>}/>\n\n                    <Route exact path='/Login' render={() => <LoginPage/>}/>\n\n                    <Route exact path='/ToDoLists' render={() => <ToDoListsContainer/>}/>\n\n             {       /* to the new updates\n                    <Route exact path='/News' render={() => <News/>}/>\n\n                    <Route exact path='/Music' render={WithSuspense(Music)}/>\n\n                    <Route exact path='/Settings' render={() => <Settings/>}/>*/}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = (state) => ({inition: GetinitionSelector(state),\n    IsLogined: GetIsLoginedSelector(state)})\n\nexport default compose(\n    connect(MapStateToProps, {InitializationAPPthunk,GetNewMessagesCountThunk}),\n    withRouter)(App)\n","\nimport React from 'react'\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/redux-store'\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter,HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\n/*ussing Hash router couz git can't work correctly with BrowserRouter ,\n           so we need to use anchors\n      /* <HashRouter>*/\n\n/* </HashRouter>,*/\n    ReactDOM.render(\n       <HashRouter basename={process.env.PUBLIC_URL}>\n\n        <Provider store={store}>\n            <App  />\n        </Provider>\n       </HashRouter>,\n        document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/userPhoto.f86bd3d2.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__2XLpg\",\"imgUser\":\"login_imgUser__3RvPz\",\"rememberMe\":\"login_rememberMe__1T4hC\",\"button\":\"login_button__1BAOG\",\"bg\":\"login_bg__3ae0b\",\"bg10\":\"login_bg10__O5xrp\",\"AuthError\":\"login_AuthError__1kfh-\",\"LoginPageAlarm\":\"login_LoginPageAlarm__19tn1\",\"logModalWindow\":\"login_logModalWindow__1r3QB\",\"AuthButton\":\"login_AuthButton__242Z_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersWrapper\":\"Users_UsersWrapper__3r0iU\",\"Main\":\"Users_Main__2xXSo\",\"img\":\"Users_img__2oaoF\",\"follow\":\"Users_follow__2uAmx\",\"Names\":\"Users_Names__1_6so\",\"Posts\":\"Users_Posts__3kZD6\",\"Country\":\"Users_Country__3gYtG\",\"City\":\"Users_City__2_dM7\",\"unfollow\":\"Users_unfollow__1O1QN\",\"PaginatorPosition\":\"Users_PaginatorPosition__2Q4mW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FoundedUsersWrapper\":\"FindUser_FoundedUsersWrapper__m1B-E\",\"GoBack\":\"FindUser_GoBack__2YgqT\",\"foundArea\":\"FindUser_foundArea__2UM3r\",\"SearchingResult\":\"FindUser_SearchingResult__1rxlW\",\"FoundedUsers\":\"FindUser_FoundedUsers__Z4_bH\",\"FindUserButton\":\"FindUser_FindUserButton__1BxTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddNewListWrapper\":\"CreateNewToDoList_AddNewListWrapper__3QLwt\",\"Addbutton\":\"CreateNewToDoList_Addbutton__38Fgq\",\"CreateAndGoBackButtons\":\"CreateNewToDoList_CreateAndGoBackButtons__3WyiO\",\"AddNewListButton\":\"CreateNewToDoList_AddNewListButton__15LRB\",\"GoBacktButton\":\"CreateNewToDoList_GoBacktButton__1yyLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ProfileData_contacts__1hcZY\",\"aboutME\":\"ProfileData_aboutME__2RKXo\",\"buttonEditInformation\":\"ProfileData_buttonEditInformation__DJ_Eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numbers\":\"Paginator_numbers__1V04X\",\"setNumbers\":\"Paginator_setNumbers__L_c7_\",\"button\":\"Paginator_button__24DIp\",\"NumbersFont\":\"Paginator_NumbersFont__2D9CN\"};"],"sourceRoot":""}